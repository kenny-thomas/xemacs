/* XEmacs site configuration template file.  -*- C -*-
   Copyright (C) 1986, 1991, 1992, 1993, 1994 Free Software Foundation, Inc.

This file is part of XEmacs.

XEmacs is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2, or (at your option) any
later version.

XEmacs is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with XEmacs; see the file COPYING.  If not, write to
the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

/* Significantly divergent from FSF. */

/* No code in XEmacs #includes config.h twice, but some of the code
   intended to work with other packages as well (like gmalloc.c)
   think they can include it as many times as they like.  */
#ifndef _CONFIG_H_
#define _CONFIG_H_

/* alloca twiddling belongs in one place, not the s&m headers
   AIX requires this to be the first thing in the file.  */
#undef HAVE_ALLOCA_H

#ifndef NOT_C_CODE
#ifdef __GNUC__
#undef  alloca
#define alloca __builtin_alloca
#elif defined(_AIX)
#pragma alloca
#elif HAVE_ALLOCA_H
#include <alloca.h>
#endif
#endif /* NOT C */

/* #### This will be removed in 19.15. */
#define LOSING_BYTECODE

/* Use this to add code in a structured way to FSF-maintained source
   files so as to make it obvious where XEmacs changes are. */
#define XEMACS

/* Does XEmacs support floating-point numbers? */
#undef LISP_FLOAT_TYPE

/* Use the *new* GNU memory allocator? */
#undef GNU_MALLOC

/* Use the system malloc? */
#undef USE_SYSTEM_MALLOC

/* Compile in TTY support? */
#undef HAVE_TTY

/* Compile in support for the X window system? */
#undef HAVE_X_WINDOWS

/* Slightly better type checking in X header files */
#ifdef HAVE_X_WINDOWS
#ifndef NeedFunctionPrototypes
#define NeedFunctionPrototypes 1
#endif
#endif

/* Define HAVE_WINDOW_SYSTEM if any windowing system is available. */
#if defined (HAVE_X_WINDOWS) /* || defined (HAVE_NEXTSTEP) */
#define HAVE_WINDOW_SYSTEM
#endif

/* Define HAVE_UNIXOID_EVENT_LOOP if we use select() to wait for events. */
#if defined (HAVE_X_WINDOWS) || defined (HAVE_TTY)
#define HAVE_UNIXOID_EVENT_LOOP
#endif

/* Are we using XFree386? */
#undef HAVE_XFREE386

#undef THIS_IS_X11R4
#undef THIS_IS_X11R5
#undef THIS_IS_X11R6

/* USER_FULL_NAME returns a string that is the user's full name.
   It can assume that the variable `pw' points to the password file
   entry for this user.

   At some sites, the pw_gecos field contains the user's full name.
   If neither this nor any other field contains the right thing, use
   pw_name, giving the user's login name, since that is better than
   nothing. */
#define USER_FULL_NAME pw->pw_gecos

/* Define AMPERSAND_FULL_NAME if you use the convention
   that & in the full name stands for the login id. */
#undef AMPERSAND_FULL_NAME

/* Some things figured out by the configure script, grouped as they are in
   configure.in. */
#undef HAVE_MACH_MACH_H
#undef HAVE_SYS_STROPTS_H
#undef HAVE_SYS_TIMEB_H
#undef HAVE_SYS_TIME_H
#undef HAVE_UNISTD_H
#undef HAVE_UTIME_H
#undef HAVE_SYS_WAIT_H
#undef HAVE_LIBINTL_H
#undef HAVE_LIBGEN_H
#undef HAVE_LOCALE_H
#undef HAVE_X11_XLOCALE_H
#undef HAVE_LINUX_VERSION_H
#undef HAVE_INTTYPES_H
#undef STDC_HEADERS
#undef TIME_WITH_SYS_TIME
#undef WORDS_BIGENDIAN
#undef HAVE_VFORK_H
#undef HAVE_KSTAT_H
#undef HAVE_SYS_PSTAT_H
#undef vfork

#undef HAVE_LONG_FILE_NAMES

#ifdef HAVE_LONG_FILE_NAMES
#define CLASH_DETECTION
#endif

#undef HAVE_LIBKSTAT
#undef HAVE_LIBINTL
#undef HAVE_LIBDNET
#undef HAVE_LIBRESOLV

/* Is `sys_siglist' declared by <signal.h>? */
#undef SYS_SIGLIST_DECLARED

/* Is `struct utimbuf' declared by <utime.h>? */
#undef HAVE_STRUCT_UTIMBUF

/* Is `struct timeval' declared by <sys/time.h>? */
#undef HAVE_TIMEVAL


#undef TM_IN_SYS_TIME
#undef HAVE_TM_ZONE
#undef HAVE_TZNAME

/* Is `h_errno' declared by <netdb.h>? */
#undef HAVE_H_ERRNO

/* Does `localtime' cache TZ? */
#undef LOCALTIME_CACHE

/* Can `gettimeofday' accept two arguments? */
#undef GETTIMEOFDAY_ONE_ARGUMENT

#undef HAVE_MMAP
#undef HAVE_STRCOLL

#undef SIZEOF_SHORT
#undef SIZEOF_INT
#undef SIZEOF_LONG

#undef HAVE_ACOSH
#undef HAVE_ASINH
#undef HAVE_ATANH

#if defined (HAVE_ACOSH) && defined (HAVE_ASINH) && defined (HAVE_ATANH)
#define HAVE_INVERSE_HYPERBOLIC
#endif

#undef HAVE_CBRT
#undef HAVE_CLOSEDIR
#undef HAVE_DUP2
#undef HAVE_EACCESS
#undef HAVE_FMOD
#undef HAVE_FPATHCONF
#undef HAVE_FREXP
#undef HAVE_FTIME
#undef HAVE_GETHOSTNAME
#undef HAVE_GETPAGESIZE
#undef HAVE_GETTIMEOFDAY
#undef HAVE_GETWD
#undef HAVE_GETCWD
#undef HAVE_LOGB
#undef HAVE_LRAND48
#undef HAVE_MATHERR
#undef HAVE_MKDIR
#undef HAVE_MKTIME
#undef HAVE_PERROR
#undef HAVE_POLL
#undef HAVE_RANDOM
#undef HAVE_REALPATH
#undef HAVE_RENAME
#undef HAVE_RES_INIT
#undef HAVE_RINT
#undef HAVE_RMDIR
#undef HAVE_SELECT
#undef HAVE_SETITIMER
#undef HAVE_SETPGID
#undef HAVE_SETSID
#undef HAVE_SIGBLOCK
#undef HAVE_SIGHOLD
#undef HAVE_SIGPROCMASK
#undef HAVE_SIGSETJMP
#undef HAVE_STRCASECMP
#undef HAVE_STRERROR
#undef HAVE_TZSET
#undef HAVE_UTIMES
#undef HAVE_WAITPID

#undef HAVE_SOCKETS
#undef HAVE_SOCKADDR_SUN_LEN
#undef HAVE_SYSVIPC

#undef SYSV_SYSTEM_DIR
#undef NONSYSTEM_DIR_LIBRARY

#undef HAVE_TERMIOS
#undef HAVE_TERMIO

#undef NLIST_STRUCT

#undef AIX_SMT_EXP

/* Compile in support for SOCKS? */
#undef HAVE_SOCKS

/* Compile in support for using the `term' program (e.g. under Linux)? */
#undef HAVE_TERM

/* Compile in support for X pixmaps via the `xpm' library? */
#undef HAVE_XPM

/* Compile in support for "X faces" via the `compface' library?
   This enables graphical display of X-face headers in mail/news messages */
#undef HAVE_XFACE

/* Compile in support for GIF (Graphics Interchange Format) images? */
#undef HAVE_GIF

/* Compile in support for displaying JPEG images via the `jpeg' library? */
#undef HAVE_JPEG

/* Compile in support for displaying PNG images via the `png' library? */
#undef HAVE_PNG

/* Compile in support for displaying TIFF images via the `tiff' library? */
#undef HAVE_TIFF

/* Do you have the Xmu library?
   This should always be the case except on losing HP-UX systems. */
#undef HAVE_XMU

/* Compile in support for DBM databases?  May require libgdbm or libdbm. */
#undef HAVE_DBM

/* Compile in support for Berkeley DB style databases?  May require libdb. */
#undef HAVE_BERKELEY_DB
/* Full #include file path for Berkeley DB's db.h */
#undef DB_H_PATH

/* Do we have either DBM or Berkeley DB database support? */
#undef HAVE_DATABASE

/* Do you have the Xauth library present?  This will add some extra
   functionality to gnuserv. */
#undef HAVE_XAUTH

/* Compile in support for gpm (General Purpose Mouse)?  */
#undef HAVE_GPM

/* Compile in support for ncurses?  */
#undef HAVE_NCURSES
/* Full #include file paths for ncurses' curses.h and term.h. */
#undef CURSES_H_PATH
#undef TERM_H_PATH

#define LOWTAGS

/* Define USE_ASSERTIONS if you want the abort() to be changed to assert().
   If the assertion fails, assert_failed() will be called.  This is
   recommended for general use because it gives more info about the crash
   than just the abort() message.  Too many people "Can't find the corefile"
   or have limit-ed core dumps out of existence. */
#undef USE_ASSERTIONS

/* Define one or more of the following if you want lots of extra checks
   (e.g. structure validation) compiled in.  These should be turned
   on during the beta-test cycle. */

/* Check the entire extent structure of a buffer each time an extent
   change is done, and do other extent-related checks. */
#undef ERROR_CHECK_EXTENTS
/* Make sure that all X... macros are dereferencing the correct type,
   and that all XSET... macros (as much as possible) are setting the
   correct type of structure.  Highly recommended for all
   development work. */
#undef ERROR_CHECK_TYPECHECK
/* Make sure valid buffer positions are passed to BUF_* macros. */
#undef ERROR_CHECK_BUFPOS
/* Attempt to catch bugs related to garbage collection (e.g. not GCPRO'ing). */
#undef ERROR_CHECK_GC
/* Attempt to catch freeing of a non-malloc()ed block, heap corruption, etc. */
#undef ERROR_CHECK_MALLOC

/* Define DEBUG_XEMACS if you want extra debugging code compiled in.
   This is mainly intended for use by developers. */
#undef DEBUG_XEMACS

/* Define MEMORY_USAGE_STATS if you want extra code compiled in to
   determine where XEmacs' memory is going. */
#undef MEMORY_USAGE_STATS

/* Define QUANTIFY if using Quantify from Pure/Atria Software.
   This adds some additional calls to control data collection.
   It is only intended for use by the developers. */
#undef QUANTIFY

/* Define EXTERNAL_WIDGET to compile support for using the editor as a
   widget within another program. */
#undef EXTERNAL_WIDGET

/* There are some special-case defines for gcc and lcc. */
#undef USE_GCC
#undef USE_LCC

/* Allow the user to override the default value of PURESIZE at configure
   time.  This must come before we include the sys files in order for
   it to be able to override any changes in them. */
#undef RAW_PURESIZE

/* Define this if you want level 2 internationalization compliance
   (localized collation and formatting).  Generally this should be
   defined, unless your system doesn't have the strcoll() and
   setlocale() library routines.  This really should be (NOT! -mrb)
   defined in the appropriate s/ or m/ file. */
#undef I18N2

/* Define this if you want level 3 internationalization compliance
   (localized messaging).  This will cause a small runtime performance
   penalty, as the strings are read from the message catalog(s).
   For this you need the gettext() and dgetext() library routines.
   WARNING, this code is under construction. */
#undef I18N3

/* Compile in support for CDE (Common Desktop Environment) drag and drop?
   Requires libDtSvc, which typically must be present at runtime.  */
#undef HAVE_CDE

/* Compile in support for OffiX Drag and Drop?  Requires libdnd. */
#undef HAVE_OFFIX_DND

/* Define this if you want Mule support (multi-byte character support).
   There may be some performance penalty, although it should be small
   if you're working with ASCII files. */
#undef MULE

/* Do we want to use X window input methods for use with Mule? (requires X11R5)
   If so, use raw Xlib or higher level Motif interface? */
#undef HAVE_XIM
#undef XIM_XLIB
#undef XIM_MOTIF

/* Non-XIM input methods for use with Mule. */
#undef HAVE_CANNA
#undef HAVE_WNN
#undef WNN6

/* Enable special GNU Make features in the Makefiles. */
#undef USE_GNU_MAKE

/* Debugging option: Don't automatically rebuild the DOC file.
   This saves a lot of time when you're repeatedly
   compiling-running-crashing. */
#undef NO_DOC_FILE

/* To eliminate use of `const' in the XEmacs sources,
   do `#define CONST_IS_LOSING' */
#undef CONST_IS_LOSING

# undef CONST
# ifdef CONST_IS_LOSING
#  define CONST
# else
#  define CONST const
# endif /* CONST */

/* If not defined, use unions instead of ints.  A few systems (DEC Alpha)
   seem to require this, probably because something with the int
   definitions isn't right with 64-bit systems.

   (It's NO_UNION_TYPE instead of USE_UNION_TYPE for historical reasons.) */
#undef NO_UNION_TYPE

/* The configuration script defines opsysfile to be the name of the
   s/...h file that describes the system type you are using.
   The file is chosen based on the configuration name you give.

   See the file ../etc/MACHINES for a list of systems and the
   configuration names to use for them.

   See s/template.h for documentation on writing s/...h files. */
#undef config_opsysfile
#include config_opsysfile

/* The configuration script defines machfile to be the name of the
   m/...h file that describes the machine you are using.  The file is
   chosen based on the configuration name you give.

   See the file ../etc/MACHINES for a list of machines and the
   configuration names to use for them.

   See m/template.h for documentation on writing m/...h files. */
#undef config_machfile
#include config_machfile

#if defined (USE_SYSTEM_MALLOC) && !defined (SYSTEM_MALLOC)
#define SYSTEM_MALLOC
#endif

#if 0 /* RMSmacs */
/* These typedefs shouldn't appear when alloca.s or Makefile.in
   includes config.h.  */
#ifndef NOT_C_CODE
#ifndef SPECIAL_EMACS_INT
typedef long EMACS_INT;
typedef unsigned long EMACS_UINT;
#endif
#endif
#endif /* 0 */

/* The configuration name.  This is used as the install directory name
   for the lib-src programs. */
#undef EMACS_CONFIGURATION

/* The version string from version.el. Used in #pragma ident in emacs.c */
#undef EMACS_VERSION
/* Used to identify the XEmacs version in stack traces. */
#undef main_1

/* Load in the conversion definitions if this system
   needs them and the source file being compiled has not
   said to inhibit this.  There should be no need for you
   to alter these lines. */

#ifdef SHORTNAMES
#ifndef NO_SHORTNAMES
#include "../shortnames/remap.h"
#endif /* not NO_SHORTNAMES */
#endif /* SHORTNAMES */

/* Use the relocating allocator for buffer space? */
#undef REL_ALLOC

/* Define the return type of signal handlers if the s/xxx.h file
   did not already do so. */
#define RETSIGTYPE void

/* SIGTYPE is the macro we actually use. */
#ifndef SIGTYPE
#define SIGTYPE RETSIGTYPE
#define SIGRETURN return
#endif

/* Define DYNODUMP if it is necessary to properly dump on this system.
   Currently this is only Solaris 2.x, for x < 6. */
#undef DYNODUMP

/* Define ENERGIZE to compile with support for the Energize Programming System.
   If you do this, don't forget to define ENERGIZE in lwlib/Imakefile as well.
   You will need to set your C_SWITCH_SITE and LD_SWITCH_SITE to point at the
   Energize connection library (libconn.a) and associated header files. */
#undef ENERGIZE
#undef ENERGIZE_2
#undef ENERGIZE_3

/* Compile in support for Sun Sparcworks/WorkShop? */
#undef SUNPRO

/* Sun SparcStations, SGI machines, and HP9000s700s have built-in
   support for playing sound files. (On Suns, the sound support is
   usually found in /usr/demo/SOUND - you may need to install the
   "SUNWaudmo" package.) */
#undef HAVE_NATIVE_SOUND
/* Native sound may be provided via soundcard.h, in various directories */
#undef SOUNDCARD_H_PATH

/* Compile in support for NAS (Network Audio System)?
   NAS_NO_ERROR_JUMP means that the NAS libraries don't include some
   error handling changes. */
#undef HAVE_NAS_SOUND
#undef NAS_NO_ERROR_JUMP

/* Compile in support for SunPro usage-tracking code? */
#undef USAGE_TRACKING

/* Compile in support for Tooltalk? */
#undef TOOLTALK
/* tt_c.h might be in "Tt" or "desktop" subdirectories */
#undef TT_C_H_PATH

/* Toolkits used by lwlib for various widgets... */
#undef LWLIB_USES_MOTIF
#undef LWLIB_USES_ATHENA
#undef LWLIB_MENUBARS_LUCID
#undef LWLIB_MENUBARS_MOTIF
#undef LWLIB_SCROLLBARS_LUCID
#undef LWLIB_SCROLLBARS_MOTIF
#undef LWLIB_SCROLLBARS_ATHENA
#undef LWLIB_SCROLLBARS_ATHENA3D
#undef LWLIB_DIALOGS_MOTIF
#undef LWLIB_DIALOGS_ATHENA
#undef LWLIB_DIALOGS_ATHENA3D

/* Other things that can be disabled by configure. */
#undef HAVE_MENUBARS
#undef HAVE_SCROLLBARS
#undef HAVE_DIALOGS
#undef HAVE_TOOLBARS


#if defined (HAVE_MENUBARS) || defined (HAVE_DIALOGS)
#define HAVE_POPUPS
#endif

/* If you are using SunOS 4.1.1 and X11r5, then you need this patch.
   There is a stupid bug in the SunOS libc.a: two functions which X11r5
   uses, mbstowcs() and wcstombs(), are unusable when programs are
   statically linked (as XEmacs must be) because the static version of
   libc.a contains the *dynamic* versions of these functions.  These
   functions don't seem to be called when XEmacs is running, so it's
   enough to define stubs for them.

   This appears to be fixed in SunOS 4.1.2.

   Also, SunOS 4.1.1 contains buggy versions of strcmp and strcpy that
   sometimes reference memory past the end of the string, which can segv.
   I don't know whether this is has been fixed as of 4.1.2 or 4.1.3. */
#if defined (sparc) && !defined (USG)
#define OBJECTS_SYSTEM sunOS-fix.o strcmp.o strcpy.o
#endif

/* If you turn this flag on, it forces encapsulation in all
circumstances; this can be used to make sure things compile OK
on various systems. */
#define DEBUG_ENCAPSULATION

/* basic system calls */

#if defined (INTERRUPTIBLE_IO) || defined (DEBUG_ENCAPSULATION)
# define ENCAPSULATE_READ
# define ENCAPSULATE_WRITE
#endif
#if defined (INTERRUPTIBLE_OPEN) || defined (MULE) || defined (DEBUG_ENCAPSULATION)
# define ENCAPSULATE_OPEN
#endif
#if defined (INTERRUPTIBLE_CLOSE) || defined (DEBUG_ENCAPSULATION)
# define ENCAPSULATE_CLOSE
#endif

/* stdio calls */

#if defined (INTERRUPTIBLE_IO) || defined (DEBUG_ENCAPSULATION)
# define ENCAPSULATE_FREAD
# define ENCAPSULATE_FWRITE
#endif
#if defined (INTERRUPTIBLE_OPEN) || defined (MULE) || defined (DEBUG_ENCAPSULATION)
# define ENCAPSULATE_FOPEN
#endif
#if defined (INTERRUPTIBLE_CLOSE) || defined (DEBUG_ENCAPSULATION)
# define ENCAPSULATE_FCLOSE
#endif

/* directory calls */

#if defined (MULE) || defined (DEBUG_ENCAPSULATION)
# define ENCAPSULATE_CHDIR
# define ENCAPSULATE_MKDIR
# define ENCAPSULATE_OPENDIR
# define ENCAPSULATE_READDIR
# define ENCAPSULATE_RMDIR

/* file-information calls */

#ifdef HAVE_EACCESS
# define ENCAPSULATE_EACCESS
#endif
# define ENCAPSULATE_ACCESS
# define ENCAPSULATE_LSTAT
# define ENCAPSULATE_READLINK
# define ENCAPSULATE_STAT

/* file-manipulation calls */

# define ENCAPSULATE_CHMOD
# define ENCAPSULATE_CREAT
# define ENCAPSULATE_LINK
# define ENCAPSULATE_RENAME
# define ENCAPSULATE_SYMLINK
# define ENCAPSULATE_UNLINK
# define ENCAPSULATE_EXECVP
#endif /* defined (MULE) || defined (DEBUG_ENCAPSULATION) */

#ifdef HAVE_CANNA
#  define CANNA2
#  define CANNA_MULE
#  define CANNA_PURESIZE 0
#else  /* not CANNA */
#  define CANNA_PURESIZE 0
#endif /* not CANNA */

#if (defined (MSDOS) && defined (FEPCTRL)) || (defined (WIN32) && defined (USE_IME))
#define HAVE_FEP
#endif

#if defined (HAVE_SOCKS) && !defined (DO_NOT_SOCKSIFY)
#define accept Raccept
#define bind Rbind
#define connect Rconnect
#define getsockname Rgetsockname
#define listen Rlisten
#endif /* HAVE_SOCKS && !DO_NOT_SOCKSIFY */

#ifndef SHORTBITS
#define SHORTBITS (8 * SIZEOF_SHORT)
#endif
#ifndef INTBITS
#define INTBITS (8 * SIZEOF_INT)
#endif
#ifndef LONGBITS
#define LONGBITS (8 * SIZEOF_LONG)
#endif

/* Does the keyword `inline' exist?  */
#undef HAVE_INLINE
#undef inline

#ifdef HAVE_INLINE
# ifdef __GNUC__
#  ifdef DONT_EXTERN_INLINE_FUNCTIONS
#   define INLINE inline
#  else
#   define INLINE extern inline
#  endif
# else
#  define INLINE static inline
# endif /* __GNUC__ */
#else
# define INLINE static
#endif /* HAVE_INLINE */

/* We want to avoid saving the signal mask if possible, because
   that necessitates a system call. */
#ifdef HAVE_SIGSETJMP
# define SETJMP(x) sigsetjmp (x, 0)
# define LONGJMP(x, y) siglongjmp (x, y)
# define JMP_BUF sigjmp_buf
#else
# define SETJMP(x) setjmp (x)
# define LONGJMP(x, y) longjmp (x, y)
# define JMP_BUF jmp_buf
#endif

/* movemail options */
/* Should movemail use POP3 for mail access? */
#undef MAIL_USE_POP
/* Should movemail use kerberos for POP authentication? */
#undef KERBEROS
/* Should movemail use hesiod for getting POP server host? */
#undef HESIOD
/* Determine type of mail locking. */
/* Play preprocessor games so that configure options override s&m files */
#undef REAL_MAIL_USE_LOCKF
#undef REAL_MAIL_USE_FLOCK
#undef MAIL_USE_LOCKF
#undef MAIL_USE_FLOCK
#ifdef REAL_MAIL_USE_FLOCK
#define MAIL_USE_FLOCK
#endif
#ifdef REAL_MAIL_USE_LOCKF
#define MAIL_USE_LOCKF
#endif

#endif /* _CONFIG_H_ */
