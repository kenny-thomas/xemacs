##   Makefile for src subdirectory in XEmacs.
##   Copyright (C) 1985, 1987, 1988, 1993, 1994 Free Software Foundation, Inc.
##   Copyright (C) 1994, 1995 Board of Trustees, University of Illinois
##   Copyright (C) 1996, 1997 Sun Microsystems, Inc.

## This file is part of XEmacs.

## XEmacs is free software; you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by the
## Free Software Foundation; either version 2, or (at your option) any
## later version.

## XEmacs is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.

## You should have received a copy of the GNU General Public License
## along with XEmacs; see the file COPYING.  If not, write to
## the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
## Boston, MA 02111-1307, USA.

## Synched up with: Not synched with FSF.

all: xemacs
.PHONY : all release dump-elc dump-elcs all-elc all-elcs lint

## For performance and consistency, no built-in rules.
.SUFFIXES:
.SUFFIXES: .c .cc .o .i .h .dep

@SET_MAKE@
SHELL=/bin/sh
RM = rm -f

lispdir = ${srcdir}/../lisp/
libsrc = ../lib-src/
etcdir = ../etc/

## Here are the things that we expect ../configure to edit.
prefix=@prefix@
srcdir=@srcdir@
version=@version@
infodir=@infodir@
infopath=@infopath@
CC=@CC@
CPP=@CPP@
CFLAGS=@CFLAGS@
CPPFLAGS=@CPPFLAGS@
LDFLAGS=@LDFLAGS@
RECURSIVE_MAKE=@RECURSIVE_MAKE@

c_switch_general=@c_switch_general@
c_switch_window_system=@c_switch_window_system@
c_switch_all=@c_switch_all@
ld_switch_general=@ld_switch_general@
ld_switch_window_system=@ld_switch_window_system@
ld_switch_all=@ld_switch_all@
ld_libs_general=@ld_libs_general@
ld_libs_window_system=@ld_libs_window_system@
ld_libs_all=@ld_libs_all@

extra_objs=@extra_objs@
LN_S=@LN_S@

ld_switch_shared=@ld_switch_shared@
start_files=@start_files@
start_flags=@start_flags@
LD=@ld@
lib_gcc=@lib_gcc@

#define NOT_C_CODE
#include "config.h"

## With the traditional VPATH setting, it is not possible to
## simultaneously compile in-place and in another directory.  The
## mistaken definition is that *all* dependencies are searched for in
## the VPATH directory, rather than just the dependencies that are not
## themselves targets.  Thus, if there is an up-to-date .o file in the
## in-place location, it will not get recompiled in the not-in-place
## location.

## The GNU Make "vpath" directive continues this tradition, but at
## least lets you restrict the classes of files that it applies to.
## This allows us to kludge around the problem.

#ifdef USE_GNU_MAKE
vpath %.c @srcdir@
vpath %.cc @srcdir@
vpath %.h @srcdir@
## now list files that should NOT be searched in the srcdir.
## This includes any .c or .h built from something else
## (e.g. a .in file).
vpath config.h
vpath paths.h
vpath Emacs.ad.h
vpath puresize-adjust.h
#else
VPATH=@srcdir@
#endif

RM = rm -f

#ifdef HAVE_NATIVE_SOUND
sound_cflags=@sound_cflags@
#endif

LWLIB_SRCDIR = ${srcdir}/../lwlib

#ifdef HAVE_X_WINDOWS
lwlib_libs = ../lwlib/liblw.a
lwlib_deps = $(lwlib_libs)
$(lwlib_libs) :
	cd ../lwlib && $(RECURSIVE_MAKE)

## a separate offix lib which merges with non-Xt event systems (TkStep, XEmacs)
OFFIX_O = @OFFIX_O@

x_objs=balloon_help.o balloon-x.o console-x.o device-x.o event-Xt.o frame-x.o\
 glyphs-x.o objects-x.o redisplay-x.o xgccache.o xselect.o

#ifdef AIX4
LIBI18N = -li18n
#endif /* AIX4 */

X11_libs= $(LIBX11_LIBS) $(libx11_intl) $(LIBI18N)
#endif /* HAVE_X_WINDOWS */

## -Demacs is needed to make some files produce the correct version
## for use in Emacs.

cppflags = $(CPPFLAGS) -Demacs -I. $(c_switch_all)
cflags   = $(CFLAGS) $(cppflags)
ldflags  = $(ld_switch_all)

#ifdef SOLARIS2
%.o : %.c
#else
.c.o:
#endif
	$(CC) -c $(cflags) $<

#ifdef SOLARIS2
%.o : %.cc
#else
.cc.o:
#endif
	$(CC) -c $(cflags) $<

## Create preprocessor output (debugging purposes only)
.c.i:
	$(CC) -P $(cppflags) $<

## lastfile must follow all files whose initialized data areas should
## be dumped as pure by dump-emacs.

## NOTE: The last line cannot be all macros, because make will barf
## if they all come out null.

objs=\
 abbrev.o alloc.o blocktype.o buffer.o bytecode.o\
 callint.o callproc.o casefiddle.o casetab.o chartab.o\
 cmdloop.o cmds.o console.o console-stream.o\
 data.o device.o dired.o doc.o doprnt.o dynarr.o\
 editfns.o elhash.o emacs.o\
 eval.o events.o $(extra_objs)\
 event-stream.o extents.o faces.o\
 fileio.o $(LOCK_OBJ) filemode.o floatfns.o fns.o font-lock.o\
 frame.o general.o getloadavg.o glyphs.o\
 $(gui_objs) hash.o indent.o insdel.o intl.o\
 keymap.o $(RTC_patch_objs) line-number.o lread.o lstream.o\
 macros.o marker.o md5.o minibuf.o objects.o opaque.o\
 print.o process.o profile.o pure.o\
 rangetab.o redisplay.o redisplay-output.o regex.o\
 search.o signal.o sound.o\
 specifier.o strftime.o symbols.o syntax.o sysdep.o\
 undo.o $(x_objs) widget.o window.o

#ifdef REL_ALLOC
rallocdocsrc = ralloc.c
rallocobjs = ralloc.o
#endif

malloclib =
#ifndef SYSTEM_MALLOC
# ifdef GNU_MALLOC  /* New GNU malloc */
#  ifdef ERROR_CHECK_MALLOC
mallocobjs = gmalloc.o free-hook.o vm-limit.o
mallocdocsrc = free-hook.c
#  else /* New GNU malloc, sans error checking */
mallocobjs = gmalloc.o vm-limit.o
mallocdocsrc =
#  endif /* ERROR_CHECK_MALLOC */
# else /* Old GNU malloc */
mallocobjs = malloc.o
mallocdocsrc =
# endif /* Old GNU malloc */
#else /* SYSTEM_MALLOC */
mallocobjs =
mallocdocsrc =
#ifdef USE_DEBUG_MALLOC
malloclib = -ldmalloc
#endif /* USE_DEBUG_MALLOC */
#endif /* SYSTEM_MALLOC */

#ifdef HAVE_X_WINDOWS

# ifdef EXTERNAL_WIDGET
external_widget_objs = ExternalShell.o extw-Xt-nonshared.o extw-Xlib-nonshared.o

## Now we try to figure out how to link a shared library.
## If we cannot figure it out, leave EXTW_LINK undefined and a shared
## library will not be created.

# ifdef USE_GCC
#  ifdef USG5
#   define EXTW_LINK(objs, output) $(CC) -shared objs -Xlinker -z -Xlinker text -o output
## I cannot figure out how to do shared a.out libraries, so just punt.
#  elif !defined (LINUX) || defined (__ELF__)
#   define EXTW_LINK(objs, output) $(CC) -shared objs -o output
#  endif
# elif defined (USG5)
#  if defined (IRIX)
#   define EXTW_LINK(objs, output) $(LD) -shared -g -check_registry ${TOOLROOT}/usr/lib/so_locations objs -o output
#  else /* not IRIX */
#   define EXTW_LINK(objs, output) $(CC) -G objs -z text -o output
#  endif /* not IRIX */
# else /* not USG5 */
#  if defined (DEC_ALPHA) && defined (OSF1)
#   define EXTW_LINK(objs, output) $(LD) $(ldflags) $(ld_switch_shared) -d objs -o output $(LIBES)
#  else /* !(DEC_ALPHA && OSF1) */
#   define EXTW_LINK(objs, output) $(LD) -dc objs -assert pure-text -o output
#  endif /* !(DEC_ALPHA && OSF1) */
# endif /* not USG5 */

#  ifdef LWLIB_USES_MOTIF
#    ifdef EXTW_LINK
motif_other_files = libextcli_Xm.a libextcli_Xm.so.1
#    else
motif_other_files = libextcli_Xm.a
#    endif
#endif /* LWLIB_USES_MOTIF */

#  ifdef EXTW_LINK
shared_other_files = libextcli_Xt.so.1 libextcli_Xlib.so.1
#  endif
other_files=\
 ${motif_other_files}\
 libextcli_Xt.a libextcli_Xlib.a\
 ${shared_other_files}

all: ${other_files}
# endif /* EXTERNAL_WIDGET */

X11_objs =  $(OFFIX_O) EmacsFrame.o EmacsShell.o TopLevelEmacsShell.o TransientEmacsShell.o EmacsManager.o $(external_widget_objs)
#endif /* HAVE_X_WINDOWS */

## define otherobjs as list of object files that make-docfile
## should not be told about.
otherobjs = $(BTL_objs) lastfile.o $(mallocobjs) $(rallocobjs) $(X11_objs)

LIBES = $(lwlib_libs) $(quantify_libs) $(malloclib) $(ld_libs_all) $(lib_gcc)

#ifdef I18N3
mo_dir = ${etcdir}
mo_file = ${mo_dir}emacs.mo
#endif

LOADPATH =  EMACSLOADPATH="${lispdir}"
DUMPENV = $(LOADPATH)

release: temacs ${libsrc}DOC $(mo_file) ${other_files}
#ifdef CANNOT_DUMP
	ln temacs xemacs
#else
#ifdef HAVE_SHM
	-if [ -w ${srcdir}/../lisp ]; then \
	  w=`pwd`; cd ${srcdir} && $${w}/temacs -nl -batch -l inc-vers; \
	else true; fi
	@touch SATISFIED
	-$(DUMPENV) ./temacs -nl -batch -l loadup.el dump
	@if test ! -f SATISFIED; then $(RECURSIVE_MAKE) $@; fi
	@$(RM) SATISFIED
#else /* ! defined (HAVE_SHM) */
	-if [ -w ${srcdir}/../lisp ]; then \
	  w=`pwd`; cd ${srcdir} && $${w}/temacs -batch -l inc-vers; \
	else true; fi
	@touch SATISFIED
	-$(DUMPENV) ./temacs -batch -l loadup.el dump
	@if test ! -f SATISFIED; then $(RECURSIVE_MAKE) $@; fi
	@$(RM) SATISFIED
#endif /* ! defined (HAVE_SHM) */
	touch release
#endif /* ! defined (CANNOT_DUMP) */

xemacs: temacs ${libsrc}DOC $(mo_file) ${other_files} update-elc.stamp
	@$(RM) $@ && touch SATISFIED
	-$(DUMPENV) ./temacs -batch -l loadup.el dump
	@if test -f $@;        then if test -f SATISFIED; then \
		./xemacs -batch -vanilla -f list-load-path-shadows; fi; \
		$(RM) SATISFIED; exit 0; fi; \
	 if test -f SATISFIED; then $(RM) SATISFIED; exit 1; fi; \
	 $(RECURSIVE_MAKE) $@;

FRC.update-elc.stamp :

update-elc.stamp : temacs FRC.update-elc.stamp
	@touch NOBYTECOMPILE
	${DUMPENV} ./temacs -batch -l update-elc.el
	@if test ! -f $@ -o -f NOBYTECOMPILE; then touch $@; fi; \
	 $(RM) NOBYTECOMPILE

obj_src = $(objs:.o=.c)

#ifdef DYNODUMP
dynodump_deps = ../dynodump/dynodump.so
../dynodump/dynodump.so:
	cd ../dynodump && $(RECURSIVE_MAKE)
#endif /* DYNODUMP */

${libsrc}DOC: temacs update-elc.stamp
	$(RM) ${libsrc}DOC; \
	${DUMPENV} ./temacs -batch -l make-docfile.el -- \
		-o ${libsrc}DOC -d ${srcdir} -i ${libsrc}../site-packages \
		${obj_src} ${mallocdocsrc} ${rallocdocsrc}

dump_elcs: dump-elcs

dump-elcs: temacs
	-${DUMPENV} ./temacs -batch -l update-elc.el

all-elc all-elcs:
	cd .. && $(RECURSIVE_MAKE) all-elc

#ifdef I18N3

# if defined(SPARC) && !defined(USG)
   xgettext=		 /usr/openwin/bin/xgettext
   xgettext_args=	 -o emacs -m_X messages
   msgfmt=		 /usr/openwin/bin/msgfmt
# else
   xgettext=		 xgettext
   xgettext_args=	 -s -d emacs -M_X messages
   msgfmt=		 msgfmt
#endif

${mo_dir}emacs.po: ${libsrc}make-msgfile ${libsrc}make-po ${objs}
	${libsrc}make-msgfile -o ${libsrc}messages ${objs}
	cd ${libsrc} && ${xgettext} ${xgettext_args}
	$(RM) ${mo_dir}emacs.po
	cd ${libsrc} && ${libsrc}make-po -a ${mo_dir}emacs.po DOC

${mo_dir}emacs.mo: ${mo_dir}emacs.po
	cd ${mo_dir} && ${msgfmt} -o emacs.mo emacs.po

${libsrc}make-msgfile:
	cd ${libsrc} && $(RECURSIVE_MAKE) make-msgfile

${libsrc}make-po:
	cd ${libsrc} && $(RECURSIVE_MAKE) make-po

#endif /* I18N3 */

${libsrc}make-docfile:
	cd ${libsrc} && $(RECURSIVE_MAKE) make-docfile

## Lint Section
LINT.c=$(LINT) $(LINTFLAGS) $(LINTINCLUDES)
LINTFILES= $(objs:.o=.ln)
LINTINCLUDES = $(cppflags)
## LINTFLAGS= -fd -m -p -s -u -v -x
LINTFLAGS= -fd -m -s -u -v -x
lint: $(LINTFILES)
	$(LINT.c) $(LINTFILES)
## end of Lint Section

temacs_deps=\
 $(start_files) ${objs} ${otherobjs}\
 $(lwlib_deps) $(dynodump_deps) prefix-args

temacs_link_args=\
 ${start_flags} ${ldflags}\
 -o $@ ${start_files} ${objs} ${otherobjs} ${LIBES}

temacs: $(temacs_deps)
	$(LD) $(temacs_link_args)

.PHONY : run-temacs

run-temacs: temacs
	./temacs -batch -l loadup.el run-temacs

## Debugging targets:
##
## RTC is Sun WorkShop's Run Time Checking
##
## Purify, Quantify, PureCoverage are software quality products from
## Rational, formerly Pure Atria, formerly Pure Software.
## 
## None of these products work with a dumped xemacs binary, because it
## does unexpected things like free memory that has been malloc'ed in
## a *different* process!!  So we need to run these on temacs.
## 

.PHONY : run-rtcmacs run-puremacs run-quantmacs

rtc_patch.o:
	rtc_patch_area -o $@

rtcmacs: $(temacs_deps) rtc_patch.o
	$(RM) temacs; $(RECURSIVE_MAKE) temacs RTC_patch_objs=rtc_patch.o
	mv temacs rtcmacs

run-rtcmacs: rtcmacs
	dbx -q -C -c \
	'dbxenv rtc_error_log_file_name /dev/fd/1; \
	dbxenv suppress_startup_message 5.0; \
	ignore POLL; \
	check -access; \
	suppress rui; \
	runargs -batch -l loadup.el run-temacs -q; \
	run' rtcmacs

## Purify
PURIFY_PROG=purify
PURIFY_FLAGS=-chain-length=32 -ignore-signals=SIGPOLL -threads=yes \
 -cache-dir=./purecache -always-use-cache-dir=yes -pointer-mask=0x0fffffff
puremacs: $(temacs_deps)
	$(PURIFY_PROG) $(PURIFY_FLAGS) $(LD) $(temacs_link_args) -lpthread

run-puremacs: puremacs
	./puremacs -batch -l loadup.el run-temacs

## Quantify
#ifdef  QUANTIFY
quantify_prog  = quantify
quantify_flags = -windows=no -record-data=no
quantify_includes = -I/local/include
quantify_libs = /local/lib/quantify_stubs.a

quantmacs: $(temacs_deps)
	$(quantify_prog) $(quantify_flags) $(LD) $(temacs_link_args)
#endif /* QUANTIFY */

PURECOV_PROG=purecov
covmacs: $(temacs_deps)
	$(PURECOV_PROG) $(LD) $(temacs_link_args)


TopLevelEmacsShell.o : ${srcdir}/EmacsShell-sub.c config.h xintrinsicp.h EmacsShellP.h
	$(CC) -c $(cflags) -DDEFINE_TOP_LEVEL_EMACS_SHELL ${srcdir}/EmacsShell-sub.c
	mv EmacsShell-sub.o TopLevelEmacsShell.o

TransientEmacsShell.o : ${srcdir}/EmacsShell-sub.c TopLevelEmacsShell.o config.h xintrinsicp.h EmacsShellP.h
	$(CC) -c $(cflags) -DDEFINE_TRANSIENT_EMACS_SHELL ${srcdir}/EmacsShell-sub.c
	mv EmacsShell-sub.o TransientEmacsShell.o

## Position-independent code for shared library creation
#if USE_GCC
pic_arg = -fpic
#elif defined (IRIX)
pic_arg = -KPIC
# else
pic_arg = -K pic
#endif

#ifdef EXTERNAL_WIDGET

external_client_motif_objs_shared    = ExternalClient-Xm-shared.o extw-Xt-shared.o extw-Xlib-shared.o
external_client_xt_objs_shared       = ExternalClient-Xt-shared.o extw-Xt-shared.o extw-Xlib-shared.o
external_client_xlib_objs_shared     = ExternalClient-Xlib-shared.o extw-Xlib-shared.o
external_client_motif_objs_nonshared = ExternalClient-Xm-nonshared.o extw-Xt-nonshared.o extw-Xlib-nonshared.o
external_client_xt_objs_nonshared    = ExternalClient-Xt-nonshared.o extw-Xt-nonshared.o extw-Xlib-nonshared.o
external_client_xlib_objs_nonshared  = ExternalClient-Xlib-nonshared.o extw-Xlib-nonshared.o

## Add dependencies so things work right with a parallel make
ExternalClient-Xm-shared.o: ${srcdir}/ExternalClient.c ExternalClient-Xt-shared.o ExternalClient-Xm-nonshared.o
	$(CC) -c $(pic_arg) $(cflags) -DEXTW_USES_MOTIF ${srcdir}/ExternalClient.c
	mv ExternalClient.o ExternalClient-Xm-shared.o

ExternalClient-Xt-shared.o: ${srcdir}/ExternalClient.c ExternalClient-Xt-nonshared.o
	$(CC) -c $(pic_arg) $(cflags) ${srcdir}/ExternalClient.c
	mv ExternalClient.o ExternalClient-Xt-shared.o

ExternalClient-Xlib-shared.o: ${srcdir}/ExternalClient-Xlib.c ExternalClient-Xlib-nonshared.o
	$(CC) -c $(pic_arg) $(cflags) ${srcdir}/ExternalClient-Xlib.c
	mv ExternalClient-Xlib.o ExternalClient-Xlib-shared.o

ExternalClient-Xm-nonshared.o: ${srcdir}/ExternalClient.c ExternalClient-Xt-nonshared.o
	$(CC) -c $(cflags) -DEXTW_USES_MOTIF ${srcdir}/ExternalClient.c
	mv ExternalClient.o ExternalClient-Xm-nonshared.o

ExternalClient-Xt-nonshared.o: ${srcdir}/ExternalClient.c
	$(CC) -c $(cflags) ${srcdir}/ExternalClient.c
	mv ExternalClient.o ExternalClient-Xt-nonshared.o

ExternalClient-Xlib-nonshared.o: ${srcdir}/ExternalClient-Xlib.c
	$(CC) -c $(cflags) ${srcdir}/ExternalClient-Xlib.c
	mv ExternalClient-Xlib.o ExternalClient-Xlib-nonshared.o

## We compile the common files twice (once with PIC and once without)
## because on some systems, compiling with PIC but not linking into
## a shared library messes things up.

extw-Xt-shared.o: ${srcdir}/extw-Xt.c extw-Xt-nonshared.o
	$(CC) -c $(pic_arg) $(cflags) ${srcdir}/extw-Xt.c
	mv extw-Xt.o extw-Xt-shared.o

extw-Xlib-shared.o: ${srcdir}/extw-Xlib.c extw-Xlib-nonshared.o
	$(CC) -c $(pic_arg) $(cflags) ${srcdir}/extw-Xlib.c
	mv extw-Xlib.o extw-Xlib-shared.o

extw-Xt-nonshared.o: ${srcdir}/extw-Xt.c
	$(CC) -c $(cflags) ${srcdir}/extw-Xt.c
	mv extw-Xt.o extw-Xt-nonshared.o

extw-Xlib-nonshared.o: ${srcdir}/extw-Xlib.c
	$(CC) -c $(cflags) ${srcdir}/extw-Xlib.c
	mv extw-Xlib.o extw-Xlib-nonshared.o

libextcli_Xm.a: ${external_client_motif_objs_nonshared}
	ar r libextcli_Xm.a ${external_client_motif_objs_nonshared}

libextcli_Xt.a: ${external_client_xt_objs_nonshared}
	ar r libextcli_Xt.a ${external_client_xt_objs_nonshared}

libextcli_Xlib.a: ${external_client_xlib_objs_nonshared}
	ar r libextcli_Xlib.a ${external_client_xlib_objs_nonshared}

#ifdef EXTW_LINK

libextcli_Xm.so.1: ${external_client_motif_objs_shared}
	EXTW_LINK(${external_client_motif_objs_shared}, libextcli_Xm.so.1)

libextcli_Xt.so.1: ${external_client_xt_objs_shared}
	EXTW_LINK(${external_client_xt_objs_shared}, libextcli_Xt.so.1)

libextcli_Xlib.so.1: ${external_client_xlib_objs_shared}
	EXTW_LINK(${external_client_xlib_objs_shared}, libextcli_Xlib.so.1)

#endif /* EXTW_LINK */

#endif /* EXTERNAL_WIDGET */

prefix-args: ${srcdir}/prefix-args.c config.h
	$(CC) $(cflags) ${srcdir}/prefix-args.c -o prefix-args

config.h: ${srcdir}/config.h.in
puresize-adjust.h: ${srcdir}/puresize.h
paths.h: ${srcdir}/paths.h.in
Emacs.ad.h: ${srcdir}/${etcdir}Emacs.ad

config.h puresize-adjust.h paths.h Emacs.ad.h :
	@echo "The file $@ needs to be re-generated."
	@echo "Please run a make in the top level directory."
	@echo "Consult the file \`INSTALL' for instructions for building XEmacs."
	@exit 1

## Some machines have alloca built-in.
## They should define HAVE_ALLOCA, or may just let alloca.s
## be used but generate no code.
## Some have it written in assembler in alloca.s.
## Some use the C version in alloca.c (these define C_ALLOCA in config.h).


#ifdef C_ALLOCA
## We could put something in alloca.c to #define free and malloc
## whenever emacs was #defined, but that's not appropriate for all
## users of alloca in Emacs.  Check out ../lib-src/getopt.c.  */

alloca.o : ${srcdir}/alloca.c
	$(CC) -c -Dfree=xfree -Dmalloc=xmalloc $(cflags) ${srcdir}/alloca.c
#else
#ifndef HAVE_ALLOCA
alloca.o : ${srcdir}/alloca.s config.h
## $(CPP) is cc -E, which may get confused by filenames
## that do not end in .c.  So copy file to a safe name.  */
##	cp ${srcdir}/alloca.s allocatem.c
## Remove any ^L, blank lines, and preprocessor comments,
## since some assemblers barf on them.  Use a different basename for the
## output file, since some stupid compilers (Green Hill) use that
## name for the intermediate assembler file.
	$(CPP) $(cppflags) allocatem.c | \
	sed -e 's///' -e 's/^#.*//' | \
	sed -n -e '/^..*$$/p' > allocax.s
	@$(RM) alloca.o
## Xenix, in particular, needs to run assembler via cc.
	$(CC) -c allocax.s
	mv allocax.o alloca.o
	$(RM) allocax.s allocatem.c
#endif /* HAVE_ALLOCA */
#endif /* ! defined (C_ALLOCA) */

#ifdef EMACS_BTL
BTL_includes = -I$(BTL_dir)
BTL_compile = -DEMACS_BTL -D`lucid-arch` -I. $(BTL_includes) $(BTL_dir)/$(@:.o=.c)

cadillac-btl.o cadillac-btl-process.o cadillac-btl-emacs.o:
	$(CC) $(CFLAGS) -c $(BTL_compile)
cadillac-btl-asm.o:
	$(CC) $(CFLAGS) -c $(BTL_compile)
#endif /* EMACS_BTL */

#ifdef HAVE_NATIVE_SOUND
sunplay.o: ${srcdir}/sunplay.c
	$(CC) -c  $(sound_cflags) $(cflags) ${srcdir}/sunplay.c
hpplay.o: ${srcdir}/hpplay.c
	$(CC) -c -Demacs $(sound_cflags) $(cflags) ${srcdir}/hpplay.c
#endif /* HAVE_NATIVE_SOUND */

## System-specific programs to be made.
## ${other_files}, $(objects_system) and $(objects_machine)
## select which of these should be compiled.  */

.PHONY: mostlyclean clean distclean realclean versionclean extraclean
mostlyclean:
	$(RM) temacs puremacs quantmacs prefix-args depend.* *.o *.i \
	  core puresize-adjust.h
clean: mostlyclean versionclean
	$(RM) libextcli* update-elc.stamp
## This is used in making a distribution.
## Do not use it on development directories!
distclean: clean
	$(RM) config.h paths.h Emacs.ad.h \
	  Makefile Makefile.in TAGS xemacs.*
realclean: distclean
versionclean:
	$(RM) xemacs ${libsrc}DOC
extraclean: realclean
	$(RM) *~ \#* m/*~ m/\#* s/*~ s/\#*

.PHONY : lock unlock
SOURCES = *.[chm] *.pswm [sm]/* COPYING paths.h.in Makefile.in.in \
	config.h.in README COPYING ChangeLog
unlock:
	chmod u+w $(SOURCES)

relock:
	chmod -w $(SOURCES)

#ifdef __GNUC__

## Dependency processing using GCC

.c.dep:
	$(CC) -MM $(cflags) $< > $*.dep

obj_dep = $(objs:.o=.dep)

.PHONY : depend gnu-depend
## #### Needs a bit of work: it doesn't see the object files that
## we are not compiling
gnu-depend: $(obj_dep)
	cat $(obj_dep) | sh ${libsrc}process-gnu-depends.sh > depend.out

#endif /* GCC */

## Dependency processing using makedepend
## This hasn't been used in over a year as of December 10, 1997.

depend:
	: > depend.tmp
	makedepend -f depend.tmp -Dsubprocesses \
		   -DHAVE_X_WINDOWS -DMULE -- $(cppflags) $(cflags) \
		   -- *.c
	sh ${libsrc}process-depends.sh < depend.tmp > depend.out
	egrep '^mule|[^a-zA-Z]mule' depend.out > /tmp/depend1.$$
	grep -v '^mule' depend.out | grep -v '[^a-zA-Z]mule' > /tmp/depend2.$$
	echo '#ifdef MULE' > depend.out
	cat /tmp/depend1.$$ >> depend.out
	@# The things you have to do to pay homage to the lexer God ... frightening
	echo '#endif /''* MULE *''/' >> depend.out
	echo '' >> depend.out
	cat /tmp/depend2.$$ >> depend.out
	$(RM) /tmp/depend1.$$ /tmp/depend2.$$

## Manually-generated dependencies (makedepend misbehaves on these)

## (actually makedepend does OK on these but we want to conditionalize them)
#ifdef EXTERNAL_WIDGET
ExternalClient-Xlib.o: extw-Xlib.h
ExternalClient-Xm.o: config.h
ExternalClient-Xm.o: xintrinsicp.h
ExternalClient-Xm.o: ExternalClient.h
ExternalClient-Xm.o: ExternalClientP.h
ExternalClient-Xm.o: extw-Xlib.h
ExternalClient-Xm.o: extw-Xt.h
ExternalClient-Xt.o: config.h
ExternalClient-Xt.o: xintrinsicp.h
ExternalClient-Xt.o: ExternalClient.h
ExternalClient-Xt.o: ExternalClientP.h
ExternalClient-Xt.o: extw-Xlib.h
ExternalClient-Xt.o: extw-Xt.h
ExternalShell.o: ExternalShell.h
ExternalShell.o: ExternalShellP.h
ExternalShell.o: config.h
ExternalShell.o: extw-Xlib.h
ExternalShell.o: extw-Xt.h
ExternalShell.o: xintrinsic.h
ExternalShell.o: xintrinsicp.h
extw-Xlib-shared.o: config.h
extw-Xlib-shared.o: extw-Xlib.h
extw-Xt-shared.o: config.h
extw-Xt-shared.o: extw-Xlib.h
extw-Xt-shared.o: extw-Xt.h
extw-Xlib-nonshared.o: config.h
extw-Xlib-nonshared.o: extw-Xlib.h
extw-Xt-nonshared.o: config.h
extw-Xt-nonshared.o: extw-Xlib.h
extw-Xt-nonshared.o: extw-Xt.h
#endif /* EXTERNAL_WIDGET */

#ifdef EMACS_BTL
cadillac-btl.o: $(BTL_dir)/cadillac-btl.c
cadillac-btl.o: $(BTL_dir)/cadillac-btl.h
cadillac-btl.o: $(BTL_dir)/cadillac-btl-extern.h
cadillac-btl-asm.o: $(BTL_dir)/cadillac-btl-asm.c
cadillac-btl-asm.o: $(BTL_dir)/cadillac-btl.h
cadillac-btl-asm.o: $(BTL_dir)/cadillac-btl-extern.h
cadillac-btl-emacs.o: $(BTL_dir)/cadillac-btl-extern.h
cadillac-btl-process.o: $(BTL_dir)/cadillac-btl-process.c
cadillac-btl-process.o: $(BTL_dir)/cadillac-btl.h
cadillac-btl-process.o: $(BTL_dir)/cadillac-btl-extern.h
#endif /* EMACS_BTL */

## (makedepend definitely misbehaves on these)
sgiplay.o: config.h
sgiplay.o: libst.h
unexconvex.o: getpagesize.h
unexec.o: getpagesize.h
unexaix.o: config.h
unexalpha.o: config.h
unexapollo.o: config.h
unexconvex.o: config.h
unexec.o: config.h
unexelf.o: config.h
unexenix.o: config.h
unexfreebsd.o: config.h
unexhp9k3.o: config.h
unexhp9k800.o: config.h
unexmips.o: config.h
unexsunos4.o: config.h

## Dependencies (formerly) generated by 'make depend'

## This has been hand-maintained since (at least) some time in 1996
## Note:  We deliberately do not include a dependency on lisp.h

#ifdef MULE
EmacsFrame.o: mule-charset.h
abbrev.o: mule-charset.h
alloc.o: mule-charset.h
buffer.o: mule-charset.h
bytecode.o: mule-charset.h
callint.o: mule-charset.h
callproc.o: mule-charset.h
callproc.o: mule-coding.h
casefiddle.o: mule-charset.h
casetab.o: mule-charset.h
chartab.o: mule-charset.h
cmdloop.o: mule-charset.h
cmds.o: mule-charset.h
console-tty.o: mule-charset.h
console-tty.o: mule-coding.h
console.o: mule-charset.h
data.o: mule-charset.h
device-tty.o: mule-charset.h
device-x.o: mule-charset.h
device.o: mule-charset.h
dialog-x.o: mule-charset.h
dired.o: mule-charset.h
doc.o: mule-charset.h
doprnt.o: mule-charset.h
editfns.o: mule-charset.h
emacs.o: mule-charset.h
eval.o: mule-charset.h
event-Xt.o: mule-charset.h
event-stream.o: mule-charset.h
event-stream.o: mule-coding.h
events.o: mule-charset.h
extents.o: mule-charset.h
faces.o: mule-charset.h
fileio.o: mule-charset.h
fileio.o: mule-coding.h
filelock.o: mule-charset.h
fns.o: mule-charset.h
font-lock.o: mule-charset.h
frame-x.o: mule-charset.h
frame.o: mule-charset.h
glyphs-x.o: mule-charset.h
glyphs.o: mule-charset.h
gui-x.o: mule-charset.h
indent.o: mule-charset.h
inline.o: mule-charset.h
inline.o: mule-coding.h
input-method-xlib.o: mule-charset.h
input-method-xlib.o: mule-coding.h
insdel.o: mule-charset.h
keymap.o: mule-charset.h
lread.o: mule-charset.h
lread.o: mule-coding.h
lstream.o: mule-charset.h
macros.o: mule-charset.h
marker.o: mule-charset.h
md5.o: mule-charset.h
menubar-x.o: mule-charset.h
minibuf.o: mule-charset.h
#ifdef HAVE_CANNA
mule-canna.o: blocktype.h
mule-canna.o: buffer.h
mule-canna.o: bufslots.h
mule-canna.o: config.h
mule-canna.o: dynarr.h
mule-canna.o: mule-charset.h
#endif /* HAVE_CANNA */
mule-ccl.o: blocktype.h
mule-ccl.o: buffer.h
mule-ccl.o: bufslots.h
mule-ccl.o: config.h
mule-ccl.o: dynarr.h
mule-ccl.o: mule-charset.h
mule-ccl.o: mule-coding.h
mule-charset.o: blocktype.h
mule-charset.o: buffer.h
mule-charset.o: bufslots.h
mule-charset.o: chartab.h
mule-charset.o: config.h
mule-charset.o: dynarr.h
mule-charset.o: elhash.h
mule-charset.o: lstream.h
mule-charset.o: mule-charset.h
mule-coding.o: blocktype.h
mule-coding.o: buffer.h
mule-coding.o: bufslots.h
mule-coding.o: config.h
mule-coding.o: dynarr.h
mule-coding.o: elhash.h
mule-coding.o: insdel.h
mule-coding.o: lstream.h
mule-coding.o: mule-charset.h
mule-coding.o: mule-coding.h
#if 0
mule-mcpath.o: blocktype.h
mule-mcpath.o: buffer.h
mule-mcpath.o: bufslots.h
mule-mcpath.o: config.h
mule-mcpath.o: dynarr.h
mule-mcpath.o: mule-charset.h
mule-mcpath.o: sysfile.h
#endif /* obsolete */
#ifdef HAVE_WNN
mule-wnnfns.o: blocktype.h
mule-wnnfns.o: buffer.h
mule-wnnfns.o: bufslots.h
mule-wnnfns.o: config.h
mule-wnnfns.o: dynarr.h
mule-wnnfns.o: mule-charset.h
mule-wnnfns.o: redisplay.h
mule-wnnfns.o: scrollbar.h
mule-wnnfns.o: window.h
#endif /* HAVE_WNN */
mule.o: blocktype.h
mule.o: config.h
mule.o: dynarr.h
mule.o: regex.h
objects-tty.o: mule-charset.h
objects-x.o: mule-charset.h
objects.o: mule-charset.h
print.o: mule-charset.h
process.o: mule-charset.h
process.o: mule-coding.h
redisplay-output.o: mule-charset.h
redisplay-tty.o: mule-charset.h
redisplay-x.o: mule-charset.h
redisplay-x.o: mule-coding.h
redisplay.o: mule-charset.h
redisplay.o: mule-coding.h
regex.o: mule-charset.h
scrollbar.o: mule-charset.h
search.o: mule-charset.h
sound.o: mule-charset.h
specifier.o: mule-charset.h
symbols.o: mule-charset.h
syntax.o: mule-charset.h
sysdep.o: mule-charset.h
toolbar-x.o: mule-charset.h
toolbar.o: mule-charset.h
tooltalk.o: mule-charset.h
undo.o: mule-charset.h
window.o: mule-charset.h
xselect.o: mule-charset.h
#endif /* MULE */

#ifdef HAVE_OFFIX_DND
device-x.o: offix.h
device-x.o: offix-types.h
device-x.o: xintrinsic.h
event-Xt.o: offix.h offix-types.h xintrinsic.h
event-Xt.o: offix-types.h
event-Xt.o: xintrinsic.h
frame-x.o: offix.h
frame-x.o: offix-types.h
frame-x.o: xintrinsic.h
offix.o: offix-cursors.h
offix.o: offix.h
offix.o: offix-types.h
offix.o: xintrinsic.h
#endif

EmacsFrame.o: $(LWLIB_SRCDIR)/lwlib.h
EmacsFrame.o: EmacsFrame.h
EmacsFrame.o: EmacsFrameP.h
EmacsFrame.o: EmacsManager.h
EmacsFrame.o: blocktype.h
EmacsFrame.o: buffer.h
EmacsFrame.o: bufslots.h
EmacsFrame.o: config.h
EmacsFrame.o: conslots.h
EmacsFrame.o: console-x.h
EmacsFrame.o: console.h
EmacsFrame.o: device.h
EmacsFrame.o: dynarr.h
EmacsFrame.o: faces.h
EmacsFrame.o: frame.h
EmacsFrame.o: frameslots.h
EmacsFrame.o: glyphs-x.h
EmacsFrame.o: glyphs.h
EmacsFrame.o: objects-x.h
EmacsFrame.o: objects.h
EmacsFrame.o: redisplay.h
EmacsFrame.o: scrollbar.h
EmacsFrame.o: specifier.h
EmacsFrame.o: toolbar.h
EmacsFrame.o: window.h
EmacsFrame.o: xintrinsic.h
EmacsFrame.o: xintrinsicp.h
EmacsFrame.o: xmprimitivep.h
EmacsFrame.o: xmu.h
EmacsManager.o: EmacsManager.h
EmacsManager.o: EmacsManagerP.h
EmacsManager.o: config.h
EmacsManager.o: xintrinsicp.h
EmacsManager.o: xmmanagerp.h
EmacsShell-sub.o: EmacsShell.h
EmacsShell-sub.o: EmacsShellP.h
EmacsShell-sub.o: config.h
EmacsShell-sub.o: xintrinsic.h
EmacsShell-sub.o: xintrinsicp.h
EmacsShell.o: EmacsShell.h
EmacsShell.o: config.h
EmacsShell.o: xintrinsicp.h
abbrev.o: blocktype.h
abbrev.o: buffer.h
abbrev.o: bufslots.h
abbrev.o: chartab.h
abbrev.o: commands.h
abbrev.o: config.h
abbrev.o: dynarr.h
abbrev.o: insdel.h
abbrev.o: redisplay.h
abbrev.o: scrollbar.h
abbrev.o: syntax.h
abbrev.o: window.h
alloc.o: backtrace.h
alloc.o: blocktype.h
alloc.o: buffer.h
alloc.o: bufslots.h
alloc.o: bytecode.h
alloc.o: chartab.h
alloc.o: config.h
alloc.o: conslots.h
alloc.o: console.h
alloc.o: device.h
alloc.o: dynarr.h
alloc.o: elhash.h
alloc.o: events.h
alloc.o: extents.h
alloc.o: frame.h
alloc.o: frameslots.h
alloc.o: glyphs.h
alloc.o: puresize.h
alloc.o: redisplay.h
alloc.o: scrollbar.h
alloc.o: specifier.h
alloc.o: systime.h
alloc.o: toolbar.h
alloc.o: window.h
alloca.o: config.h
balloon_help.o: config.h
balloon_help.o: balloon_help.h
balloon-x.o: config.h
balloon-x.o: device.h
balloon-x.o: console-x.h
balloon-x.o: balloon_help.h
blocktype.o: blocktype.h
blocktype.o: config.h
blocktype.o: dynarr.h
buffer.o: blocktype.h
buffer.o: buffer.h
buffer.o: bufslots.h
buffer.o: chartab.h
buffer.o: commands.h
buffer.o: config.h
buffer.o: conslots.h
buffer.o: console.h
buffer.o: device.h
buffer.o: dynarr.h
buffer.o: elhash.h
buffer.o: extents.h
buffer.o: faces.h
buffer.o: frame.h
buffer.o: frameslots.h
buffer.o: insdel.h
buffer.o: process.h
buffer.o: redisplay.h
buffer.o: scrollbar.h
buffer.o: specifier.h
buffer.o: syntax.h
buffer.o: sysdep.h
buffer.o: sysfile.h
buffer.o: toolbar.h
buffer.o: window.h
bytecode.o: blocktype.h
bytecode.o: buffer.h
bytecode.o: bufslots.h
bytecode.o: chartab.h
bytecode.o: config.h
bytecode.o: dynarr.h
bytecode.o: syntax.h
callint.o: blocktype.h
callint.o: buffer.h
callint.o: bufslots.h
callint.o: bytecode.h
callint.o: commands.h
callint.o: config.h
callint.o: dynarr.h
callint.o: events.h
callint.o: insdel.h
callint.o: redisplay.h
callint.o: scrollbar.h
callint.o: systime.h
callint.o: window.h
callproc.o: blocktype.h
callproc.o: buffer.h
callproc.o: bufslots.h
callproc.o: commands.h
callproc.o: config.h
callproc.o: dynarr.h
callproc.o: insdel.h
callproc.o: lstream.h
callproc.o: paths.h
callproc.o: process.h
callproc.o: redisplay.h
callproc.o: scrollbar.h
callproc.o: sysdep.h
callproc.o: sysfile.h
callproc.o: sysproc.h
callproc.o: systime.h
callproc.o: systty.h
callproc.o: window.h
casefiddle.o: blocktype.h
casefiddle.o: buffer.h
casefiddle.o: bufslots.h
casefiddle.o: chartab.h
casefiddle.o: commands.h
casefiddle.o: config.h
casefiddle.o: dynarr.h
casefiddle.o: insdel.h
casefiddle.o: syntax.h
casetab.o: blocktype.h
casetab.o: buffer.h
casetab.o: bufslots.h
casetab.o: config.h
casetab.o: dynarr.h
casetab.o: opaque.h
chartab.o: blocktype.h
chartab.o: buffer.h
chartab.o: bufslots.h
chartab.o: chartab.h
chartab.o: commands.h
chartab.o: config.h
chartab.o: dynarr.h
chartab.o: syntax.h
cm.o: blocktype.h
cm.o: config.h
cm.o: conslots.h
cm.o: console-tty.h
cm.o: console.h
cm.o: device.h
cm.o: dynarr.h
cm.o: frame.h
cm.o: frameslots.h
cm.o: lstream.h
cm.o: redisplay.h
cm.o: scrollbar.h
cm.o: specifier.h
cm.o: systty.h
cm.o: toolbar.h
cmdloop.o: blocktype.h
cmdloop.o: buffer.h
cmdloop.o: bufslots.h
cmdloop.o: commands.h
cmdloop.o: config.h
cmdloop.o: conslots.h
cmdloop.o: console.h
cmdloop.o: device.h
cmdloop.o: dynarr.h
cmdloop.o: events.h
cmdloop.o: frame.h
cmdloop.o: frameslots.h
cmdloop.o: macros.h
cmdloop.o: redisplay.h
cmdloop.o: scrollbar.h
cmdloop.o: specifier.h
cmdloop.o: systime.h
cmdloop.o: toolbar.h
cmdloop.o: window.h
cmds.o: blocktype.h
cmds.o: buffer.h
cmds.o: bufslots.h
cmds.o: chartab.h
cmds.o: commands.h
cmds.o: config.h
cmds.o: dynarr.h
cmds.o: insdel.h
cmds.o: syntax.h
console-stream.o: blocktype.h
console-stream.o: config.h
console-stream.o: conslots.h
console-stream.o: console-stream.h
console-stream.o: console-tty.h
console-stream.o: console.h
console-stream.o: device.h
console-stream.o: dynarr.h
console-stream.o: events.h
console-stream.o: frame.h
console-stream.o: frameslots.h
console-stream.o: redisplay.h
console-stream.o: scrollbar.h
console-stream.o: specifier.h
console-stream.o: sysdep.h
console-stream.o: systime.h
console-stream.o: systty.h
console-stream.o: toolbar.h
console-stream.o: window.h
console-tty.o: blocktype.h
console-tty.o: buffer.h
console-tty.o: bufslots.h
console-tty.o: config.h
console-tty.o: conslots.h
console-tty.o: console-stream.h
console-tty.o: console-tty.h
console-tty.o: console.h
console-tty.o: device.h
console-tty.o: dynarr.h
console-tty.o: events.h
console-tty.o: faces.h
console-tty.o: frame.h
console-tty.o: frameslots.h
console-tty.o: lstream.h
console-tty.o: redisplay.h
console-tty.o: scrollbar.h
console-tty.o: specifier.h
console-tty.o: sysdep.h
console-tty.o: systime.h
console-tty.o: systty.h
console-tty.o: toolbar.h
console-x.o: blocktype.h
console-x.o: config.h
console-x.o: conslots.h
console-x.o: console-x.h
console-x.o: console.h
console-x.o: dynarr.h
console-x.o: process.h
console-x.o: redisplay.h
console-x.o: xintrinsic.h
console.o: blocktype.h
console.o: buffer.h
console.o: bufslots.h
console.o: config.h
console.o: conslots.h
console.o: console-tty.h
console.o: console.h
console.o: device.h
console.o: dynarr.h
console.o: events.h
console.o: frame.h
console.o: frameslots.h
console.o: redisplay.h
console.o: scrollbar.h
console.o: specifier.h
console.o: sysdep.h
console.o: systime.h
console.o: systty.h
console.o: toolbar.h
console.o: window.h
data.o: blocktype.h
data.o: buffer.h
data.o: bufslots.h
data.o: bytecode.h
data.o: config.h
data.o: dynarr.h
data.o: sysfloat.h
#ifdef HAVE_DATABASE
database.o: blocktype.h
database.o: config.h
database.o: database.h
database.o: dynarr.h
#endif /* HAVE_DATABASE */
debug.o: blocktype.h
debug.o: bytecode.h
debug.o: config.h
debug.o: debug.h
debug.o: dynarr.h
device-tty.o: blocktype.h
device-tty.o: buffer.h
device-tty.o: bufslots.h
device-tty.o: config.h
device-tty.o: conslots.h
device-tty.o: console-stream.h
device-tty.o: console-tty.h
device-tty.o: console.h
device-tty.o: device.h
device-tty.o: dynarr.h
device-tty.o: events.h
device-tty.o: faces.h
device-tty.o: frame.h
device-tty.o: frameslots.h
device-tty.o: lstream.h
device-tty.o: redisplay.h
device-tty.o: scrollbar.h
device-tty.o: specifier.h
device-tty.o: sysdep.h
device-tty.o: systime.h
device-tty.o: systty.h
device-tty.o: toolbar.h
device-x.o: $(LWLIB_SRCDIR)/lwlib.h
device-x.o: blocktype.h
device-x.o: buffer.h
device-x.o: bufslots.h
device-x.o: config.h
device-x.o: conslots.h
device-x.o: console-x.h
device-x.o: console.h
device-x.o: device.h
device-x.o: dynarr.h
device-x.o: events.h
device-x.o: faces.h
device-x.o: frame.h
device-x.o: frameslots.h
device-x.o: glyphs-x.h
device-x.o: glyphs.h
device-x.o: objects-x.h
device-x.o: objects.h
device-x.o: redisplay.h
device-x.o: scrollbar.h
device-x.o: specifier.h
device-x.o: sysdep.h
device-x.o: sysfile.h
device-x.o: systime.h
device-x.o: toolbar.h
device-x.o: window.h
device-x.o: xgccache.h
device-x.o: xintrinsic.h
device-x.o: xintrinsicp.h
device-x.o: xmu.h
device.o: blocktype.h
device.o: buffer.h
device.o: bufslots.h
device.o: config.h
device.o: conslots.h
device.o: console.h
device.o: device.h
device.o: dynarr.h
device.o: elhash.h
device.o: events.h
device.o: faces.h
device.o: frame.h
device.o: frameslots.h
device.o: keymap.h
device.o: redisplay.h
device.o: scrollbar.h
device.o: specifier.h
device.o: sysdep.h
device.o: systime.h
device.o: toolbar.h
device.o: window.h
dgif_lib.o: config.h
dgif_lib.o: gif_lib.h
dialog-x.o: $(LWLIB_SRCDIR)/lwlib.h
dialog-x.o: EmacsFrame.h
dialog-x.o: EmacsManager.h
dialog-x.o: EmacsShell.h
dialog-x.o: blocktype.h
dialog-x.o: buffer.h
dialog-x.o: bufslots.h
dialog-x.o: commands.h
dialog-x.o: config.h
dialog-x.o: conslots.h
dialog-x.o: console-x.h
dialog-x.o: console.h
dialog-x.o: device.h
dialog-x.o: dynarr.h
dialog-x.o: events.h
dialog-x.o: frame.h
dialog-x.o: frameslots.h
dialog-x.o: gui-x.h
dialog-x.o: opaque.h
dialog-x.o: redisplay.h
dialog-x.o: scrollbar.h
dialog-x.o: specifier.h
dialog-x.o: systime.h
dialog-x.o: toolbar.h
dialog-x.o: window.h
dialog-x.o: xintrinsic.h
dialog.o: blocktype.h
dialog.o: config.h
dialog.o: dynarr.h
dired.o: blocktype.h
dired.o: buffer.h
dired.o: bufslots.h
dired.o: commands.h
dired.o: config.h
dired.o: dynarr.h
dired.o: elhash.h
dired.o: regex.h
dired.o: sysdir.h
dired.o: sysfile.h
dlopen.o: config.h
dlopen.o: buffer.h
doc.o: blocktype.h
doc.o: buffer.h
doc.o: bufslots.h
doc.o: bytecode.h
doc.o: config.h
doc.o: dynarr.h
doc.o: insdel.h
doc.o: keymap.h
doc.o: sysfile.h
doprnt.o: blocktype.h
doprnt.o: buffer.h
doprnt.o: bufslots.h
doprnt.o: config.h
doprnt.o: dynarr.h
doprnt.o: lstream.h
dynarr.o: blocktype.h
dynarr.o: config.h
dynarr.o: dynarr.h
ecrt0.o: config.h
editfns.o: blocktype.h
editfns.o: buffer.h
editfns.o: bufslots.h
editfns.o: commands.h
editfns.o: config.h
editfns.o: conslots.h
editfns.o: console.h
editfns.o: device.h
editfns.o: dynarr.h
editfns.o: events.h
editfns.o: extents.h
editfns.o: frame.h
editfns.o: frameslots.h
editfns.o: insdel.h
editfns.o: redisplay.h
editfns.o: scrollbar.h
editfns.o: specifier.h
editfns.o: sysdep.h
editfns.o: syspwd.h
editfns.o: systime.h
editfns.o: toolbar.h
editfns.o: window.h
elhash.o: blocktype.h
elhash.o: bytecode.h
elhash.o: config.h
elhash.o: dynarr.h
elhash.o: elhash.h
elhash.o: hash.h
emacs.o: backtrace.h
emacs.o: blocktype.h
emacs.o: buffer.h
emacs.o: bufslots.h
emacs.o: commands.h
emacs.o: config.h
emacs.o: conslots.h
emacs.o: console.h
emacs.o: dynarr.h
emacs.o: process.h
emacs.o: sysdep.h
emacs.o: sysfile.h
emacs.o: systime.h
emacs.o: systty.h
eval.o: backtrace.h
eval.o: blocktype.h
eval.o: buffer.h
eval.o: bufslots.h
eval.o: bytecode.h
eval.o: commands.h
eval.o: config.h
eval.o: conslots.h
eval.o: console.h
eval.o: dynarr.h
eval.o: opaque.h
event-Xt.o: $(LWLIB_SRCDIR)/lwlib.h
event-Xt.o: Emacs.ad.h
event-Xt.o: EmacsFrame.h
event-Xt.o: blocktype.h
event-Xt.o: buffer.h
event-Xt.o: bufslots.h
event-Xt.o: commands.h
event-Xt.o: config.h
event-Xt.o: conslots.h
event-Xt.o: console-tty.h
event-Xt.o: console-x.h
event-Xt.o: console.h
event-Xt.o: device.h
event-Xt.o: dynarr.h
event-Xt.o: events.h
event-Xt.o: frame.h
event-Xt.o: frameslots.h
event-Xt.o: objects-x.h
event-Xt.o: objects.h
event-Xt.o: paths.h
event-Xt.o: process.h
event-Xt.o: redisplay.h
event-Xt.o: scrollbar.h
event-Xt.o: specifier.h
event-Xt.o: sysproc.h
event-Xt.o: systime.h
event-Xt.o: systty.h
event-Xt.o: toolbar.h
event-Xt.o: xintrinsic.h
event-Xt.o: xintrinsicp.h
event-stream.o: blocktype.h
event-stream.o: buffer.h
event-stream.o: bufslots.h
event-stream.o: commands.h
event-stream.o: config.h
event-stream.o: conslots.h
event-stream.o: console.h
event-stream.o: device.h
event-stream.o: dynarr.h
event-stream.o: elhash.h
event-stream.o: events.h
event-stream.o: frame.h
event-stream.o: frameslots.h
event-stream.o: insdel.h
event-stream.o: keymap.h
event-stream.o: lstream.h
event-stream.o: macros.h
event-stream.o: opaque.h
event-stream.o: process.h
event-stream.o: redisplay.h
event-stream.o: scrollbar.h
event-stream.o: specifier.h
event-stream.o: sysdep.h
event-stream.o: systime.h
event-stream.o: toolbar.h
event-stream.o: window.h
event-tty.o: blocktype.h
event-tty.o: config.h
event-tty.o: conslots.h
event-tty.o: console-tty.h
event-tty.o: console.h
event-tty.o: device.h
event-tty.o: dynarr.h
event-tty.o: events.h
event-tty.o: frame.h
event-tty.o: frameslots.h
event-tty.o: paths.h
event-tty.o: process.h
event-tty.o: scrollbar.h
event-tty.o: specifier.h
event-tty.o: sysproc.h
event-tty.o: systime.h
event-tty.o: systty.h
event-tty.o: syswait.h
event-tty.o: toolbar.h
event-unixoid.o: blocktype.h
event-unixoid.o: config.h
event-unixoid.o: conslots.h
event-unixoid.o: console-stream.h
event-unixoid.o: console-tty.h
event-unixoid.o: console.h
event-unixoid.o: device.h
event-unixoid.o: dynarr.h
event-unixoid.o: events.h
event-unixoid.o: paths.h
event-unixoid.o: process.h
event-unixoid.o: sysdep.h
event-unixoid.o: sysproc.h
event-unixoid.o: systime.h
event-unixoid.o: systty.h
events.o: blocktype.h
events.o: buffer.h
events.o: bufslots.h
events.o: config.h
events.o: conslots.h
events.o: console-tty.h
events.o: console-x.h
events.o: console.h
events.o: device.h
events.o: dynarr.h
events.o: events.h
events.o: extents.h
events.o: frame.h
events.o: frameslots.h
events.o: glyphs.h
events.o: keymap.h
events.o: redisplay.h
events.o: scrollbar.h
events.o: specifier.h
events.o: systime.h
events.o: systty.h
events.o: toolbar.h
events.o: window.h
events.o: xintrinsic.h
extents.o: blocktype.h
extents.o: buffer.h
extents.o: bufslots.h
extents.o: config.h
extents.o: conslots.h
extents.o: console.h
extents.o: debug.h
extents.o: device.h
extents.o: dynarr.h
extents.o: elhash.h
extents.o: extents.h
extents.o: faces.h
extents.o: frame.h
extents.o: frameslots.h
extents.o: glyphs.h
extents.o: hash.h
extents.o: insdel.h
extents.o: opaque.h
extents.o: process.h
extents.o: redisplay.h
extents.o: scrollbar.h
extents.o: specifier.h
extents.o: toolbar.h
faces.o: EmacsFrame.h
faces.o: blocktype.h
faces.o: buffer.h
faces.o: bufslots.h
faces.o: config.h
faces.o: conslots.h
faces.o: console-x.h
faces.o: console.h
faces.o: device.h
faces.o: dynarr.h
faces.o: elhash.h
faces.o: extents.h
faces.o: faces.h
faces.o: frame.h
faces.o: frameslots.h
faces.o: glyphs.h
faces.o: hash.h
faces.o: objects-x.h
faces.o: objects.h
faces.o: redisplay.h
faces.o: scrollbar.h
faces.o: specifier.h
faces.o: toolbar.h
faces.o: window.h
faces.o: xintrinsic.h
fileio.o: blocktype.h
fileio.o: buffer.h
fileio.o: bufslots.h
fileio.o: config.h
fileio.o: conslots.h
fileio.o: console.h
fileio.o: device.h
fileio.o: dynarr.h
fileio.o: events.h
fileio.o: frame.h
fileio.o: frameslots.h
fileio.o: insdel.h
fileio.o: lstream.h
fileio.o: paths.h
fileio.o: redisplay.h
fileio.o: scrollbar.h
fileio.o: specifier.h
fileio.o: sysdep.h
fileio.o: sysdir.h
fileio.o: sysfile.h
fileio.o: sysproc.h
fileio.o: syspwd.h
fileio.o: systime.h
fileio.o: toolbar.h
fileio.o: window.h
filelock.o: blocktype.h
filelock.o: buffer.h
filelock.o: bufslots.h
filelock.o: config.h
filelock.o: dynarr.h
filelock.o: paths.h
filelock.o: sysdir.h
filelock.o: sysfile.h
filelock.o: syspwd.h
filemode.o: blocktype.h
filemode.o: config.h
filemode.o: dynarr.h
filemode.o: sysfile.h
floatfns.o: blocktype.h
floatfns.o: config.h
floatfns.o: dynarr.h
floatfns.o: sysfloat.h
fns.o: blocktype.h
fns.o: buffer.h
fns.o: bufslots.h
fns.o: bytecode.h
fns.o: commands.h
fns.o: config.h
fns.o: conslots.h
fns.o: console.h
fns.o: device.h
fns.o: dynarr.h
fns.o: events.h
fns.o: extents.h
fns.o: frame.h
fns.o: frameslots.h
fns.o: scrollbar.h
fns.o: specifier.h
fns.o: systime.h
fns.o: toolbar.h
font-lock.o: blocktype.h
font-lock.o: buffer.h
font-lock.o: bufslots.h
font-lock.o: chartab.h
font-lock.o: config.h
font-lock.o: dynarr.h
font-lock.o: insdel.h
font-lock.o: syntax.h
frame-tty.o: blocktype.h
frame-tty.o: config.h
frame-tty.o: conslots.h
frame-tty.o: console-tty.h
frame-tty.o: console.h
frame-tty.o: device.h
frame-tty.o: dynarr.h
frame-tty.o: frame.h
frame-tty.o: frameslots.h
frame-tty.o: scrollbar.h
frame-tty.o: specifier.h
frame-tty.o: systty.h
frame-tty.o: toolbar.h
frame-x.o: $(LWLIB_SRCDIR)/lwlib.h
frame-x.o: EmacsFrame.h
frame-x.o: EmacsFrameP.h
frame-x.o: EmacsManager.h
frame-x.o: EmacsShell.h
frame-x.o: ExternalShell.h
frame-x.o: blocktype.h
frame-x.o: buffer.h
frame-x.o: bufslots.h
frame-x.o: config.h
frame-x.o: conslots.h
frame-x.o: console-x.h
frame-x.o: console.h
frame-x.o: device.h
frame-x.o: dynarr.h
frame-x.o: events.h
frame-x.o: extents.h
frame-x.o: faces.h
frame-x.o: frame.h
frame-x.o: frameslots.h
frame-x.o: glyphs-x.h
frame-x.o: glyphs.h
frame-x.o: objects-x.h
frame-x.o: objects.h
frame-x.o: redisplay.h
frame-x.o: scrollbar-x.h
frame-x.o: scrollbar.h
frame-x.o: specifier.h
frame-x.o: systime.h
frame-x.o: toolbar.h
frame-x.o: window.h
frame-x.o: xintrinsic.h
frame-x.o: xintrinsicp.h
frame-x.o: xmprimitivep.h
frame-x.o: xmu.h
frame.o: blocktype.h
frame.o: buffer.h
frame.o: bufslots.h
frame.o: config.h
frame.o: conslots.h
frame.o: console.h
frame.o: device.h
frame.o: dynarr.h
frame.o: events.h
frame.o: extents.h
frame.o: faces.h
frame.o: frame.h
frame.o: frameslots.h
frame.o: glyphs.h
frame.o: menubar.h
frame.o: redisplay.h
frame.o: scrollbar.h
frame.o: specifier.h
frame.o: sysdep.h
frame.o: systime.h
frame.o: toolbar.h
frame.o: window.h
free-hook.o: blocktype.h
free-hook.o: config.h
free-hook.o: dynarr.h
free-hook.o: hash.h
general.o: blocktype.h
general.o: config.h
general.o: dynarr.h
getloadavg.o: blocktype.h
getloadavg.o: config.h
getloadavg.o: dynarr.h
gif_err.o: config.h
gif_err.o: gif_lib.h
gifalloc.o: config.h
gifalloc.o: gif_lib.h
glyphs-x.o: $(LWLIB_SRCDIR)/lwlib.h
glyphs-x.o: ${srcdir}/${etcdir}xemacs.xbm
glyphs-x.o: bitmaps.h
glyphs-x.o: blocktype.h
glyphs-x.o: buffer.h
glyphs-x.o: bufslots.h
glyphs-x.o: config.h
glyphs-x.o: conslots.h
glyphs-x.o: console-x.h
glyphs-x.o: console.h
glyphs-x.o: device.h
glyphs-x.o: dynarr.h
glyphs-x.o: frame.h
glyphs-x.o: frameslots.h
glyphs-x.o: gif_lib.h
glyphs-x.o: glyphs-x.h
glyphs-x.o: glyphs.h
glyphs-x.o: insdel.h
glyphs-x.o: objects-x.h
glyphs-x.o: objects.h
glyphs-x.o: opaque.h
glyphs-x.o: scrollbar.h
glyphs-x.o: specifier.h
glyphs-x.o: sysfile.h
glyphs-x.o: toolbar.h
glyphs-x.o: xintrinsic.h
glyphs-x.o: xmu.h
glyphs.o: blocktype.h
glyphs.o: buffer.h
glyphs.o: bufslots.h
glyphs.o: config.h
glyphs.o: conslots.h
glyphs.o: console.h
glyphs.o: device.h
glyphs.o: dynarr.h
glyphs.o: elhash.h
glyphs.o: faces.h
glyphs.o: frame.h
glyphs.o: frameslots.h
glyphs.o: glyphs.h
glyphs.o: objects.h
glyphs.o: redisplay.h
glyphs.o: scrollbar.h
glyphs.o: specifier.h
glyphs.o: toolbar.h
glyphs.o: window.h
gmalloc.o: config.h
gmalloc.o: getpagesize.h
gui-x.o: $(LWLIB_SRCDIR)/lwlib.h
gui-x.o: blocktype.h
gui-x.o: buffer.h
gui-x.o: bufslots.h
gui-x.o: config.h
gui-x.o: conslots.h
gui-x.o: console-x.h
gui-x.o: console.h
gui-x.o: device.h
gui-x.o: dynarr.h
gui-x.o: frame.h
gui-x.o: frameslots.h
gui-x.o: gui-x.h
gui-x.o: opaque.h
gui-x.o: scrollbar.h
gui-x.o: specifier.h
gui-x.o: toolbar.h
gui-x.o: xintrinsic.h
gui.o: blocktype.h
gui.o: config.h
gui.o: dynarr.h
hash.o: blocktype.h
hash.o: config.h
hash.o: dynarr.h
hash.o: elhash.h
hash.o: hash.h
hftctl.o: blocktype.h
hftctl.o: config.h
hftctl.o: dynarr.h
hpplay.o: blocktype.h
hpplay.o: config.h
hpplay.o: dynarr.h
indent.o: blocktype.h
indent.o: buffer.h
indent.o: bufslots.h
indent.o: config.h
indent.o: conslots.h
indent.o: console.h
indent.o: device.h
indent.o: dynarr.h
indent.o: extents.h
indent.o: faces.h
indent.o: frame.h
indent.o: frameslots.h
indent.o: glyphs.h
indent.o: insdel.h
indent.o: redisplay.h
indent.o: scrollbar.h
indent.o: specifier.h
indent.o: toolbar.h
indent.o: window.h
inline.o: $(LWLIB_SRCDIR)/lwlib.h
inline.o: blocktype.h
inline.o: buffer.h
inline.o: bufslots.h
inline.o: bytecode.h
inline.o: chartab.h
inline.o: config.h
inline.o: conslots.h
inline.o: console-x.h
inline.o: console.h
inline.o: device.h
inline.o: dynarr.h
inline.o: elhash.h
inline.o: events.h
inline.o: extents.h
inline.o: faces.h
inline.o: frame.h
inline.o: frameslots.h
inline.o: glyphs-x.h
inline.o: glyphs.h
inline.o: gui-x.h
inline.o: keymap.h
inline.o: lstream.h
inline.o: objects.h
inline.o: opaque.h
inline.o: process.h
inline.o: redisplay.h
inline.o: scrollbar.h
inline.o: specifier.h
inline.o: syntax.h
inline.o: systime.h
inline.o: toolbar.h
inline.o: window.h
inline.o: xintrinsic.h
input-method-xlib.o: EmacsFrame.h
input-method-xlib.o: blocktype.h
input-method-xlib.o: buffer.h
input-method-xlib.o: bufslots.h
input-method-xlib.o: config.h
input-method-xlib.o: conslots.h
input-method-xlib.o: console-x.h
input-method-xlib.o: console.h
input-method-xlib.o: device.h
input-method-xlib.o: dynarr.h
input-method-xlib.o: frame.h
input-method-xlib.o: frameslots.h
input-method-xlib.o: insdel.h
input-method-xlib.o: lstream.h
input-method-xlib.o: redisplay.h
input-method-xlib.o: scrollbar.h
input-method-xlib.o: specifier.h
input-method-xlib.o: toolbar.h
input-method-xlib.o: window.h
input-method-xlib.o: xintrinsic.h
insdel.o: blocktype.h
insdel.o: buffer.h
insdel.o: bufslots.h
insdel.o: config.h
insdel.o: conslots.h
insdel.o: console.h
insdel.o: device.h
insdel.o: dynarr.h
insdel.o: extents.h
insdel.o: frame.h
insdel.o: frameslots.h
insdel.o: insdel.h
insdel.o: lstream.h
insdel.o: redisplay.h
insdel.o: scrollbar.h
insdel.o: specifier.h
insdel.o: toolbar.h
intl.o: blocktype.h
intl.o: bytecode.h
intl.o: config.h
intl.o: conslots.h
intl.o: console.h
intl.o: device.h
intl.o: dynarr.h
keymap.o: blocktype.h
keymap.o: buffer.h
keymap.o: bufslots.h
keymap.o: bytecode.h
keymap.o: commands.h
keymap.o: config.h
keymap.o: conslots.h
keymap.o: console.h
keymap.o: device.h
keymap.o: dynarr.h
keymap.o: elhash.h
keymap.o: events.h
keymap.o: frame.h
keymap.o: frameslots.h
keymap.o: insdel.h
keymap.o: keymap.h
keymap.o: redisplay.h
keymap.o: scrollbar.h
keymap.o: specifier.h
keymap.o: systime.h
keymap.o: toolbar.h
keymap.o: window.h
libsst.o: blocktype.h
libsst.o: config.h
libsst.o: dynarr.h
libsst.o: libsst.h
line-number.o: config.h
line-number.o: buffer.h
line-number.o: insdel.h
line-number.o: line-number.h
linuxplay.o: blocktype.h
linuxplay.o: config.h
linuxplay.o: dynarr.h
lread.o: blocktype.h
lread.o: buffer.h
lread.o: bufslots.h
lread.o: bytecode.h
lread.o: commands.h
lread.o: config.h
lread.o: dynarr.h
lread.o: insdel.h
lread.o: lstream.h
lread.o: opaque.h
lread.o: paths.h
lread.o: sysfile.h
lstream.o: blocktype.h
lstream.o: buffer.h
lstream.o: bufslots.h
lstream.o: config.h
lstream.o: dynarr.h
lstream.o: insdel.h
lstream.o: lstream.h
lstream.o: sysfile.h
macros.o: blocktype.h
macros.o: buffer.h
macros.o: bufslots.h
macros.o: commands.h
macros.o: config.h
macros.o: conslots.h
macros.o: console.h
macros.o: device.h
macros.o: dynarr.h
macros.o: events.h
macros.o: frame.h
macros.o: frameslots.h
macros.o: keymap.h
macros.o: macros.h
macros.o: redisplay.h
macros.o: scrollbar.h
macros.o: specifier.h
macros.o: systime.h
macros.o: toolbar.h
macros.o: window.h
malloc.o: config.h
malloc.o: getpagesize.h
marker.o: blocktype.h
marker.o: buffer.h
marker.o: bufslots.h
marker.o: config.h
marker.o: dynarr.h
md5.o: blocktype.h
md5.o: buffer.h
md5.o: bufslots.h
md5.o: config.h
md5.o: dynarr.h
md5.o: insdel.h
menubar-x.o: $(LWLIB_SRCDIR)/lwlib.h
menubar-x.o: EmacsFrame.h
menubar-x.o: EmacsManager.h
menubar-x.o: EmacsShell.h
menubar-x.o: blocktype.h
menubar-x.o: buffer.h
menubar-x.o: bufslots.h
menubar-x.o: commands.h
menubar-x.o: config.h
menubar-x.o: conslots.h
menubar-x.o: console-x.h
menubar-x.o: console.h
menubar-x.o: device.h
menubar-x.o: dynarr.h
menubar-x.o: events.h
menubar-x.o: frame.h
menubar-x.o: frameslots.h
menubar-x.o: gui-x.h
menubar-x.o: opaque.h
menubar-x.o: redisplay.h
menubar-x.o: scrollbar.h
menubar-x.o: specifier.h
menubar-x.o: systime.h
menubar-x.o: toolbar.h
menubar-x.o: window.h
menubar-x.o: xintrinsic.h
menubar.o: blocktype.h
menubar.o: config.h
menubar.o: conslots.h
menubar.o: console.h
menubar.o: device.h
menubar.o: dynarr.h
menubar.o: frame.h
menubar.o: frameslots.h
menubar.o: menubar.h
menubar.o: redisplay.h
menubar.o: scrollbar.h
menubar.o: specifier.h
menubar.o: toolbar.h
menubar.o: window.h
minibuf.o: blocktype.h
minibuf.o: buffer.h
minibuf.o: bufslots.h
minibuf.o: commands.h
minibuf.o: config.h
minibuf.o: conslots.h
minibuf.o: console-stream.h
minibuf.o: console.h
minibuf.o: device.h
minibuf.o: dynarr.h
minibuf.o: events.h
minibuf.o: frame.h
minibuf.o: frameslots.h
minibuf.o: insdel.h
minibuf.o: redisplay.h
minibuf.o: scrollbar.h
minibuf.o: specifier.h
minibuf.o: systime.h
minibuf.o: toolbar.h
minibuf.o: window.h
msdos.o: config.h
nas.o: blocktype.h
nas.o: config.h
nas.o: dynarr.h
objects-tty.o: blocktype.h
objects-tty.o: config.h
objects-tty.o: conslots.h
objects-tty.o: console-tty.h
objects-tty.o: console.h
objects-tty.o: device.h
objects-tty.o: dynarr.h
objects-tty.o: insdel.h
objects-tty.o: objects-tty.h
objects-tty.o: objects.h
objects-tty.o: specifier.h
objects-tty.o: systty.h
objects-x.o: blocktype.h
objects-x.o: buffer.h
objects-x.o: bufslots.h
objects-x.o: config.h
objects-x.o: conslots.h
objects-x.o: console-x.h
objects-x.o: console.h
objects-x.o: device.h
objects-x.o: dynarr.h
objects-x.o: insdel.h
objects-x.o: objects-x.h
objects-x.o: objects.h
objects-x.o: specifier.h
objects-x.o: xintrinsic.h
objects.o: blocktype.h
objects.o: buffer.h
objects.o: bufslots.h
objects.o: config.h
objects.o: conslots.h
objects.o: console.h
objects.o: device.h
objects.o: dynarr.h
objects.o: elhash.h
objects.o: faces.h
objects.o: frame.h
objects.o: frameslots.h
objects.o: objects.h
objects.o: redisplay.h
objects.o: scrollbar.h
objects.o: specifier.h
objects.o: toolbar.h
objects.o: window.h
opaque.o: blocktype.h
opaque.o: config.h
opaque.o: dynarr.h
opaque.o: opaque.h
print.o: backtrace.h
print.o: blocktype.h
print.o: buffer.h
print.o: bufslots.h
print.o: bytecode.h
print.o: config.h
print.o: conslots.h
print.o: console-stream.h
print.o: console-tty.h
print.o: console.h
print.o: device.h
print.o: dynarr.h
print.o: extents.h
print.o: frame.h
print.o: frameslots.h
print.o: insdel.h
print.o: lstream.h
print.o: scrollbar.h
print.o: specifier.h
print.o: systty.h
print.o: toolbar.h
process.o: blocktype.h
process.o: buffer.h
process.o: bufslots.h
process.o: commands.h
process.o: config.h
process.o: conslots.h
process.o: console.h
process.o: device.h
process.o: dynarr.h
process.o: events.h
process.o: frame.h
process.o: frameslots.h
process.o: insdel.h
process.o: lstream.h
process.o: opaque.h
process.o: paths.h
process.o: process.h
process.o: redisplay.h
process.o: scrollbar.h
process.o: specifier.h
process.o: sysdep.h
process.o: sysfile.h
process.o: sysproc.h
process.o: systime.h
process.o: systty.h
process.o: syswait.h
process.o: toolbar.h
process.o: window.h
profile.o: backtrace.h
profile.o: blocktype.h
profile.o: bytecode.h
profile.o: config.h
profile.o: dynarr.h
profile.o: hash.h
profile.o: systime.h
pure.o: blocktype.h
pure.o: config.h
pure.o: dynarr.h
pure.o: puresize.h puresize-adjust.h
ralloc.o: blocktype.h
ralloc.o: config.h
ralloc.o: dynarr.h
ralloc.o: getpagesize.h
rangetab.o: blocktype.h
rangetab.o: config.h
rangetab.o: dynarr.h
realpath.o: config.h
redisplay-output.o: blocktype.h
redisplay-output.o: buffer.h
redisplay-output.o: bufslots.h
redisplay-output.o: config.h
redisplay-output.o: conslots.h
redisplay-output.o: console.h
redisplay-output.o: debug.h
redisplay-output.o: device.h
redisplay-output.o: dynarr.h
redisplay-output.o: faces.h
redisplay-output.o: frame.h
redisplay-output.o: frameslots.h
redisplay-output.o: glyphs.h
redisplay-output.o: redisplay.h
redisplay-output.o: scrollbar.h
redisplay-output.o: specifier.h
redisplay-output.o: sysdep.h
redisplay-output.o: toolbar.h
redisplay-output.o: window.h
redisplay-tty.o: blocktype.h
redisplay-tty.o: buffer.h
redisplay-tty.o: bufslots.h
redisplay-tty.o: config.h
redisplay-tty.o: conslots.h
redisplay-tty.o: console-tty.h
redisplay-tty.o: console.h
redisplay-tty.o: device.h
redisplay-tty.o: dynarr.h
redisplay-tty.o: events.h
redisplay-tty.o: faces.h
redisplay-tty.o: frame.h
redisplay-tty.o: frameslots.h
redisplay-tty.o: glyphs.h
redisplay-tty.o: lstream.h
redisplay-tty.o: objects-tty.h
redisplay-tty.o: objects.h
redisplay-tty.o: redisplay.h
redisplay-tty.o: scrollbar.h
redisplay-tty.o: specifier.h
redisplay-tty.o: sysdep.h
redisplay-tty.o: systime.h
redisplay-tty.o: systty.h
redisplay-tty.o: toolbar.h
redisplay-tty.o: window.h
redisplay-x.o: $(LWLIB_SRCDIR)/lwlib.h
redisplay-x.o: EmacsFrame.h
redisplay-x.o: EmacsFrameP.h
redisplay-x.o: blocktype.h
redisplay-x.o: buffer.h
redisplay-x.o: bufslots.h
redisplay-x.o: config.h
redisplay-x.o: conslots.h
redisplay-x.o: console-x.h
redisplay-x.o: console.h
redisplay-x.o: debug.h
redisplay-x.o: device.h
redisplay-x.o: dynarr.h
redisplay-x.o: faces.h
redisplay-x.o: frame.h
redisplay-x.o: frameslots.h
redisplay-x.o: glyphs-x.h
redisplay-x.o: glyphs.h
redisplay-x.o: objects-x.h
redisplay-x.o: objects.h
redisplay-x.o: paths.h
redisplay-x.o: redisplay.h
redisplay-x.o: scrollbar.h
redisplay-x.o: specifier.h
redisplay-x.o: sysdep.h
redisplay-x.o: sysproc.h
redisplay-x.o: systime.h
redisplay-x.o: toolbar.h
redisplay-x.o: window.h
redisplay-x.o: xgccache.h
redisplay-x.o: xintrinsic.h
redisplay-x.o: xintrinsicp.h
redisplay-x.o: xmprimitivep.h
redisplay.o: blocktype.h
redisplay.o: buffer.h
redisplay.o: bufslots.h
redisplay.o: commands.h
redisplay.o: config.h
redisplay.o: conslots.h
redisplay.o: console.h
redisplay.o: debug.h
redisplay.o: device.h
redisplay.o: dynarr.h
redisplay.o: extents.h
redisplay.o: faces.h
redisplay.o: frame.h
redisplay.o: frameslots.h
redisplay.o: glyphs.h
redisplay.o: insdel.h
redisplay.o: menubar.h
redisplay.o: objects.h
redisplay.o: process.h
redisplay.o: redisplay.h
redisplay.o: scrollbar.h
redisplay.o: specifier.h
redisplay.o: toolbar.h
redisplay.o: window.h
regex.o: blocktype.h
regex.o: buffer.h
regex.o: bufslots.h
regex.o: chartab.h
regex.o: config.h
regex.o: dynarr.h
regex.o: regex.h
regex.o: syntax.h
scrollbar-x.o: $(LWLIB_SRCDIR)/lwlib.h
scrollbar-x.o: EmacsFrame.h
scrollbar-x.o: EmacsManager.h
scrollbar-x.o: blocktype.h
scrollbar-x.o: config.h
scrollbar-x.o: conslots.h
scrollbar-x.o: console-x.h
scrollbar-x.o: console.h
scrollbar-x.o: device.h
scrollbar-x.o: dynarr.h
scrollbar-x.o: frame.h
scrollbar-x.o: frameslots.h
scrollbar-x.o: glyphs-x.h
scrollbar-x.o: glyphs.h
scrollbar-x.o: gui-x.h
scrollbar-x.o: redisplay.h
scrollbar-x.o: scrollbar-x.h
scrollbar-x.o: scrollbar.h
scrollbar-x.o: specifier.h
scrollbar-x.o: toolbar.h
scrollbar-x.o: window.h
scrollbar-x.o: xintrinsic.h
scrollbar.o: blocktype.h
scrollbar.o: buffer.h
scrollbar.o: bufslots.h
scrollbar.o: commands.h
scrollbar.o: config.h
scrollbar.o: conslots.h
scrollbar.o: console.h
scrollbar.o: device.h
scrollbar.o: dynarr.h
scrollbar.o: frame.h
scrollbar.o: frameslots.h
scrollbar.o: glyphs.h
scrollbar.o: redisplay.h
scrollbar.o: scrollbar.h
scrollbar.o: specifier.h
scrollbar.o: toolbar.h
scrollbar.o: window.h
search.o: blocktype.h
search.o: buffer.h
search.o: bufslots.h
search.o: chartab.h
search.o: commands.h
search.o: config.h
search.o: dynarr.h
search.o: insdel.h
search.o: opaque.h
search.o: regex.h
search.o: syntax.h
signal.o: blocktype.h
signal.o: config.h
signal.o: conslots.h
signal.o: console.h
signal.o: device.h
signal.o: dynarr.h
signal.o: events.h
signal.o: frame.h
signal.o: frameslots.h
signal.o: scrollbar.h
signal.o: specifier.h
signal.o: sysdep.h
signal.o: systime.h
signal.o: toolbar.h
sound.o: blocktype.h
sound.o: buffer.h
sound.o: bufslots.h
sound.o: commands.h
sound.o: config.h
sound.o: conslots.h
sound.o: console-x.h
sound.o: console.h
sound.o: device.h
sound.o: dynarr.h
sound.o: redisplay.h
sound.o: sysdep.h
sound.o: xintrinsic.h
specifier.o: blocktype.h
specifier.o: buffer.h
specifier.o: bufslots.h
specifier.o: config.h
specifier.o: conslots.h
specifier.o: console.h
specifier.o: device.h
specifier.o: dynarr.h
specifier.o: frame.h
specifier.o: frameslots.h
specifier.o: opaque.h
specifier.o: redisplay.h
specifier.o: scrollbar.h
specifier.o: specifier.h
specifier.o: toolbar.h
specifier.o: window.h
strftime.o: blocktype.h
strftime.o: config.h
strftime.o: dynarr.h
sunOS-fix.o: config.h
sunplay.o: blocktype.h
sunplay.o: config.h
sunplay.o: dynarr.h
sunplay.o: sysdep.h
sunpro.o: blocktype.h
sunpro.o: config.h
sunpro.o: dynarr.h
symbols.o: blocktype.h
symbols.o: buffer.h
symbols.o: bufslots.h
symbols.o: config.h
symbols.o: conslots.h
symbols.o: console.h
symbols.o: dynarr.h
syntax.o: blocktype.h
syntax.o: buffer.h
syntax.o: bufslots.h
syntax.o: chartab.h
syntax.o: commands.h
syntax.o: config.h
syntax.o: dynarr.h
syntax.o: insdel.h
syntax.o: syntax.h
sysdep.o: blocktype.h
sysdep.o: buffer.h
sysdep.o: bufslots.h
sysdep.o: config.h
sysdep.o: conslots.h
sysdep.o: console-stream.h
sysdep.o: console-x.h
sysdep.o: console.h
sysdep.o: device.h
sysdep.o: dynarr.h
sysdep.o: events.h
sysdep.o: frame.h
sysdep.o: frameslots.h
sysdep.o: process.h
sysdep.o: redisplay.h
sysdep.o: scrollbar.h
sysdep.o: specifier.h
sysdep.o: sysdep.h
sysdep.o: sysdir.h
sysdep.o: sysfile.h
sysdep.o: systime.h
sysdep.o: syswait.h
sysdep.o: toolbar.h
sysdep.o: window.h
sysdep.o: xintrinsic.h
termcap.o: blocktype.h
termcap.o: config.h
termcap.o: conslots.h
termcap.o: console.h
termcap.o: device.h
termcap.o: dynarr.h
terminfo.o: config.h
toolbar-x.o: $(LWLIB_SRCDIR)/lwlib.h
toolbar-x.o: EmacsFrame.h
toolbar-x.o: EmacsFrameP.h
toolbar-x.o: EmacsManager.h
toolbar-x.o: blocktype.h
toolbar-x.o: buffer.h
toolbar-x.o: bufslots.h
toolbar-x.o: config.h
toolbar-x.o: conslots.h
toolbar-x.o: console-x.h
toolbar-x.o: console.h
toolbar-x.o: device.h
toolbar-x.o: dynarr.h
toolbar-x.o: faces.h
toolbar-x.o: frame.h
toolbar-x.o: frameslots.h
toolbar-x.o: glyphs-x.h
toolbar-x.o: glyphs.h
toolbar-x.o: objects-x.h
toolbar-x.o: objects.h
toolbar-x.o: redisplay.h
toolbar-x.o: scrollbar.h
toolbar-x.o: specifier.h
toolbar-x.o: toolbar.h
toolbar-x.o: window.h
toolbar-x.o: xgccache.h
toolbar-x.o: xintrinsic.h
toolbar-x.o: xintrinsicp.h
toolbar-x.o: xmprimitivep.h
toolbar.o: blocktype.h
toolbar.o: buffer.h
toolbar.o: bufslots.h
toolbar.o: config.h
toolbar.o: conslots.h
toolbar.o: console.h
toolbar.o: device.h
toolbar.o: dynarr.h
toolbar.o: frame.h
toolbar.o: frameslots.h
toolbar.o: glyphs.h
toolbar.o: redisplay.h
toolbar.o: scrollbar.h
toolbar.o: specifier.h
toolbar.o: toolbar.h
toolbar.o: window.h
tooltalk.o: blocktype.h
tooltalk.o: buffer.h
tooltalk.o: bufslots.h
tooltalk.o: config.h
tooltalk.o: dynarr.h
tooltalk.o: elhash.h
tooltalk.o: process.h
tooltalk.o: tooltalk.h
tparam.o: config.h
undo.o: blocktype.h
undo.o: buffer.h
undo.o: bufslots.h
undo.o: config.h
undo.o: dynarr.h
undo.o: extents.h
vm-limit.o: blocktype.h
vm-limit.o: config.h
vm-limit.o: dynarr.h
vm-limit.o: mem-limits.h
widget.o: config.h
widget.o: buffer.h
widget.o: insdel.h
window.o: blocktype.h
window.o: buffer.h
window.o: bufslots.h
window.o: commands.h
window.o: config.h
window.o: conslots.h
window.o: console.h
window.o: device.h
window.o: dynarr.h
window.o: faces.h
window.o: frame.h
window.o: frameslots.h
window.o: glyphs.h
window.o: objects.h
window.o: redisplay.h
window.o: scrollbar.h
window.o: specifier.h
window.o: toolbar.h
window.o: window.h
xgccache.o: blocktype.h
xgccache.o: config.h
xgccache.o: dynarr.h
xgccache.o: hash.h
xgccache.o: xgccache.h
xmu.o: config.h
xselect.o: blocktype.h
xselect.o: buffer.h
xselect.o: bufslots.h
xselect.o: config.h
xselect.o: conslots.h
xselect.o: console-x.h
xselect.o: console.h
xselect.o: device.h
xselect.o: dynarr.h
xselect.o: frame.h
xselect.o: frameslots.h
xselect.o: objects-x.h
xselect.o: objects.h
xselect.o: opaque.h
xselect.o: scrollbar.h
xselect.o: specifier.h
xselect.o: systime.h
xselect.o: toolbar.h
xselect.o: xintrinsic.h
