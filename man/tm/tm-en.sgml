<!doctype sinfo system>
<!-- $Id: tm-en.sgml,v 1.3 1997/01/30 02:22:57 steve Exp $ -->
<head>
<title>tm 7.100 Manual (English Version)
<author>MORIOKA Tomohiko <mail>morioka@jaist.ac.jp</mail>
<date>1996/12/25

<toc>
</head>

<body>

<abstract>
<p>
This file documents tm, a MIME package for GNU Emacs.
</abstract>

<h1> What is tm?
<node> Introduction
<p>
The tm package is a set of modules to enjoy MIME on GNU Emacs.  Using
tm, you can
<p>
<ul>
<li> playback or view the MIME messages using tm-view
<li> compose MIME message using tm-edit
<li> use the enhanced MIME features with mh-e, GNUS, Gnus, RMAIL and VM
</ul>

<noindent>
and more.
<p>
Please read following about each topics:

<ul>
<li><a file="gnus-mime-en">tm-MUA for Gnus</a>
<li><a file="tm-gnus-en">tm-MUA for GNUS</a>
<li><a file="tm-mh-e-en">tm-MUA for mh-e</a>
<li><a file="tm-vm-en">tm-MUA for VM</a>
<li><a file="tm-view-en">mime/viewer-mode</a>
<li><a file="tm-edit-en">mime/editor-mode</a>
</ul>


<h2> Glossary
<node> Glossary

<h3> 7bit
<node> 7bit
<p>
<concept>7bit</concept> means any integer between 0 .. 127.
<p>
Any data represented by 7bit integers is called <concept>7bit
data</concept>.
<p>
Textual string consisted of Control characters between 0 .. 31 and
127, and space represented by 32, and graphic characters between 33
.. 236 are called <concept>7bit (textual) string</concept>.
<p>
Traditional Internet <a node="MTA">MTA</a> can translate 7bit data, so
it is no need to translate by <a
node="Quoted-Printable">Quoted-Printable</a> or <a
node="Base64">Base64</a> for 7bit data.
<p>
However if there are too long lines, it can not translate by 7bit MTA
even if it is 7bit data.  <dref>RFC 821</dref> and <dref>RFC
2045</dref> require lines in 7bit data must be less than 998 bytes.
So if a ``7bit data'' has a line more than 999 bytes, it is regarded
as <dref>binary</dref>.  For example, Postscript file should be
encoded by Quoted-Printable.


<h3> 8bit
<node> 8bit
<p>
<concept>8bit</concept> means any integer between 0 .. 255.
<p>
Any data represented by 8bit integers is called <concept>8bit
data</concept>.
<p>
Textual string consisted of Control characters between 0 .. 31, 127,
and 128 .. 159, and space represented by 32, and graphic characters
between 33 .. 236 and 160 .. 255 are called <concept>8bit (textual)
string</concept>.
<p>
For example, <dref>iso-8859-1</dref> or <dref>euc-kr</dref> are
coded-character-set represented by 8bit textual string.
<p>
Traditional Internet <a node="MTA">MTA</a> can translate only
<dref>7bit</dref> data, so if a 8bit data will be translated such MTA,
it must be encoded by <dref>Quoted-Printable</dref> or
<dref>Base64</dref>.
<p>
However 8bit MTA are increasing today.
<p>
However if there are too long lines, it can not translate by 8bit MTA
even if it is 8bit data.  <dref>RFC 2045</dref> require lines in 8bit
data must be less than 998 bytes.  So if a ``8bit data'' has a line
more than 999 bytes, it is regarded as <dref>binary</dref>, so it must
be encoded by Base64 or Quoted-Printable.


<h3> 94-character set
<node> 94-character set
<p>
<concept>94-character set</concept> is a kind of 1 byte <dref>graphic
character set</dref>, each characters are in positions 02/01 (33) to
07/14 (126) or 10/01 (161) to 15/14 (254).  (ex. <dref>ASCII</dref>,
JIS X0201-Latin)


<h3> 96-character set
<node> 96-character set
<p>
<concept>96-character set</concept> is a kind of 1 byte <dref>graphic
character set</dref>, each characters are in positions 02/00 (32) to
07/15 (126) or 10/00 (160) to 15/15 (255). (ex. ISO 8859)


<h3> 94x94-character set
<node> 94x94-character set
<p>
<concept>94x94-character set</concept> is a kind of 2 byte
<dref>graphic character set</dref>, each bytes are in positions 02/01
(33) to 07/14 (126) or 10/01 (161) to 15/14 (254).  (ex. <dref>JIS
X0208</dref>, <dref>GB 2312</dref>)


<h3> ASCII
<node> ASCII
<p>
<concept>ASCII</concept> is a <dref>94-character set</dref> contains
primary latin characters (A-Z, a-z), numbers and some characters.  It
is a standard of the United States of America.  It is a variant of <a
node="ISO 646">ISO 646</a>.

<standard abbrev="ASCII" title-en="Coded Character Set -- 7-Bit
	      American Standard Code for Information Interchange"
	      number="ANSI X3.4" year="1986">


<h3> Base64
<node> Base64
<p>
<concept>Base64</concept> is a transfer encoding method of
<dref>MIME</dref> defined in <dref>RFC 2045</dref>.
<p>
The encoding process represents 24-bit groups of input bits as output
strings of 4 encoded characters.  Encoded characters represent integer
0 .. 63 or <concept>pad</concept>.  Base64 data must be 4 * n bytes,
so pad is used to adjust size.
<p>
These 65 characters are subset of all versions of ISO 646, including
US-ASCII, and all versions of EBCDIC.  So it is safe even if it is
translated by non-Internet gateways.


<h3> binary
<node> binary
<p>
Any byte stream is called <concept>binary</concept>.
<p>
It does not require structureof lines.  It differs from from <a
node="8bit">8bit</a>.
<p>
In addition, if line structured data contain too long line (more than
998 bytes), it is regarded as binary.


<h3> cn-gb, gb2312
<node> cn-gb
<p>
A <a node="MIME charset">MIME charset</a> for simplified Chinese
mainly used in the Chinese mainland.
<p>
It is a <dref>8bit</dref> <dref>coded character set</dref> based on
<dref>ISO 2022</dref>.  It extends <dref>ASCII</dref> to combine
<dref>GB 2312</dref>.
<p>
It is defined in <a node="RFC 1922">RFC 1922</a>.


<h3> cn-big5, big5
<node> cn-big5
<p>
A <a node="MIME charset">MIME charset</a> for traditional Chinese
mainly used in Taiwan and Hon Kong.
<p>
It is a <dref>8bit</dref> <dref>coded character set</dref> not based
on <dref>ISO 2022</dref>.  It is a de-fact standard.
<p>
It is defined in <a node="RFC 1922">RFC 1922</a>.
<p>
cf. <report abbrev="BIG5" author="Institute for Information Industry"
	      title-en="Chinese Coded Character Set in Computer"
	      date="March 1984">
<p>
It corresponds to <dref>CNS 11643</dref>.


<h3> CNS 11643-1992
<node> CNS 11643
<p>
<a node="graphic character set">Graphic character sets</a> for Chinese
mainly written by traditional Chinese mainly used in Taiwan and Hong
Kong.  It is a standard of Taiwan.  Currently there are seven
<dref>94x94-character set</dref>.
<p>
Final byte of <dref>ISO 2022</dref> are following:

<dl>
<dt>plane 1<dd>04/07 (`G')
<dt>plane 2<dd>04/08 (`H')
<dt>plane 3<dd>04/09 (`I')
<dt>plane 4<dd>04/10 (`J')
<dt>plane 5<dd>04/11 (`K')
<dt>plane 6<dd>04/12 (`L')
<dt>plane 7<dd>04/13 (`M')
</dl>

<standard abbrev="CNS 11643-1992" title-en="Standard Interchange Code
	      for Generally-Used Chinese Characters" number="CNS
	      11643" year="1992">


<h3> Coded character set, Character code
<node> coded character set
<p>
A set of unambiguous rules that establishes a character set and the
one-to-one relationship between the characters of the set and their
bit combinations.


<h3> Code extension
<node> code extension
<p>
The techniques for the encoding of characters that are not included in
the character set of a given code. (ex. <dref>ISO 2022</dref>)


<h3> Content-Disposition field
<node> Content-Disposition
<p>
A field to specify presentation of entity or file name.  It is an
extension for <dref>MIME</dref>.
<p>
<rfc number="1806" type="Experimental" author="E R. Troost and
	      S. Dorner" title="Communicating Presentation Information
	      in Internet Messages: The Content-Disposition Header"
	      date="June 1995">


<h3> Content-Type field
<node> Content-Type field
<p>
Header field to represent information about body, such as <dref>media
type</dref>, <dref>MIME charset</dref>.  It is defined in <dref>RFC
2045</dref>.

<memo>
<p>
Historically, Content-Type field was proposed in RFC 1049.  In it,
Content-Type did not distinguish type and subtype.  However MIME
parser may be able to accept RFC 1049 based Content-Type as unknown
type.
</memo>

<p>
Content-Type field is defined as following:

<quote>
``Content-Type'' ``:'' <concept>type</concept> ``/''
<concept>subtype</concept> *( ``;'' <concept>parameter</concept> )
</quote>

<p>
For example:

<quote>
<verb>
Content-Type: image/jpeg
</verb>
</quote>

<quote>
<verb>
Content-Type: text/plain; charset=iso-2022-jp
</verb>
</quote>

<memo>
<p>
A part does not have content-type field is regarded as

<quote>
<verb>
Content-Type: text/plain; charset=us-ascii
</verb>
</quote>

<noindent>
<cf node="us-ascii">

And a part has unknown type/subtype is regarded as

<quote>
<verb>
Content-Type: application/octet-stream
</verb>
</quote>

</memo>


<h3> Emacs
<node> Emacs
<p>
In this document, `Emacs' means GNU Emacs released by FSF, and `emacs'
means any variants of GNU Emacs.


<h3> encoded-word
<node> encoded-word
<p>
Representation non <dref>ASCII</dref> characters in header.  It
is defined in <concept>RFC 2047</concept>.
<p>
<rfc number="2047" type="Standards Track" author="K. Moore"
	      title="MIME (Multipurpose Internet Mail Extensions) Part
	      Three: Message Header Extensions for Non-ASCII Text"
	      date="November 1996" obsolete="1521,1522,1590">


<h3> encapsulation
<node> encapsulation
<p>
Method to insert whole <a node="RFC 822">Internet message</a> into
another Internet message.
<p>
For example, it is used to forward a message.
<p>
<cf node="message/rfc822">


<h3> Entity
<node> entity
<p>
Header fields and contents of a message or one of the parts in the
body of a <dref>multipart</dref> entity.

<memo>
<p>
In this document, `entity' might be called ``part''.
</memo>


<h3> euc-kr
<node> euc-kr
<p>
A <dref>MIME charset</dref> for Korean.
<p>
It is a <dref>8bit</dref> <dref>coded character set</dref> based on
<dref>ISO 2022</dref>.  It extends <dref>ASCII</dref> to combine
<dref>KS C5601</dref>.
<p>
It is defined in <dref>RFC 1557</dref>.
<p>
cf. <standard abbrev="euc-kr" org="Korea Industrial Standards
	      Association" title-en="Hangul Unix Environment"
	      number="KS C 5861" year="1992">


<h3> FTP <node> FTP
<p>
<rfc name="FTP" number="959" type="STD 9" author="Postel, J. and
	      J. Reynolds" title="File Transfer Protocol"
	      date="October 1985">


<h3> GB 2312-1980
<node> GB 2312
<p>
A <dref>94x94-character set</dref> for Chinese mainly written by
simplified Chinese mainly used in the Chinese mainland.  It is a
standard of China.
<p>
Final byte of <dref>ISO 2022</dref> is 04/01 (`A').

<standard abbrev="GB 2312"
	      title-en="Code of Chinese Graphic Character Set for
	      Information Interchange - Primary Set" number="GB 2312"
	      year="1980">


<h3> GB 8565.2-1988
<node> GB 8565.2
<p>
A <dref>94x94-character set</dref> for Chinese as supplement to
<dref>GB 2312</dref>.  It is a standard of China.

<standard abbrev="GB 8565.2" title-en="Information Processing - Coded
	      Character Sets for Text Communication - Part 2: Graphic
	      Characters used with Primary Set" number="GB 8565.2"
	      year="1988">


<h3> Graphic Character Set
<node> graphic character set
<p>
<a node="coded character set">Coded character set</a> for graphic
characters.


<h3> hz-gb2312
<node> hz-gb2312
<p>
A <a node="MIME charset">MIME charset</a> for simplified Chinese
mainly used in the Chinese mainland.
<p>
It extends <dref>ASCII</dref> to combine <dref>GB 2312</dref>, its
technique is like <dref>iso-2022-jp</dref>, but it is designed to be 
ASCII printable to use special form for ESC sequence to designate GB
2312 to G0.
<p>
It is defined in RFC 1842 and 1843.

<rfc number="1842" type="Informational" author="Y. Wei, Y. Zhang,
	      J. Li, J. Ding and Y. Jiang" title="ASCII Printable
	      Characters-Based Chinese Character Encoding for Internet
	      Messages" date="August 1995">
<rfc number="1843" type="Informational" author="F. Lee" title="HZ - A
	      Data Format for Exchanging Files of Arbitrarily Mixed
	      Chinese and ASCII characters" date="August 1995">


<h3> ISO 2022
<node> ISO 2022
<p>
It is a standard for character code structure and <dref>code
extension</dref> technique.

<standard abbrev="ISO 2022" org="International Organization for
	      Standardization (ISO)" title-en="Information Processing:
	      ISO 7-bit and 8-bit coded character sets: Code extension
	      techniques" number="ISO/IEC 2022" year="1994">


<h3> iso-2022-cn
<node> iso-2022-cn
<p>
A <dref>MIME charset</dref> for Chinese.
<p>
It is a <dref>7bit</dref> <dref>coded character set</dref> based on
<dref>ISO 2022</dref>.  It extends <dref>ASCII</dref> to combine
<dref>GB 2312</dref> and/or <a node="CNS 11643">CNS 11643 plain 1,
plain 2</a>.
<p>
It is defined in <dref>RFC 1922</dref>.


<h3> iso-2022-cn-ext
<node> iso-2022-cn-ext
<p>
A <dref>MIME charset</dref> for Chinese.
<p>
It is a <dref>7bit</dref> <dref>coded character set</dref> based on
<dref>ISO 2022</dref>.  It extends <dref>ASCII</dref> to combine
<dref>GB 2312</dref>, <a node="CNS 11643">CNS 11643 plain 1 .. 7</a>, 
<dref>ISO-IR-165</dref> and other Chinese graphic character sets.
<p>
It is defined in <dref>RFC 1922</dref>.
<p>
<memo>
MULE 2.3 and current XEmacs/mule can not use it correctly.
<p>
Emacs/mule can use it.
</memo>


<h3> iso-2022-jp
<node> iso-2022-jp
<p>
A <dref>MIME charset</dref> for Japanese.
<p>
It is a <dref>7bit</dref> <dref>coded character set</dref> based on
old <dref>ISO 2022</dref>.  It switches <dref>ASCII</dref>, JIS
X0201-Latin, <a node="JIS C6226">JIS X0208-1978</a> and <a node="JIS
X0208">JIS X0208-1983</a>.
<p>
It is defined in RFC 1468.
<p>
<memo>
JIS X0208-1997? will define it in annex as non-<dref>ISO 2022</dref>
encoding.
</memo>

<rfc name="iso-2022-jp" number="1468" author="Murai J., M. Crispin,
	      and E. van der Poel" title="Japanese Character Encoding
	      for Internet Messages" date="June 1993">


<h3> iso-2022-jp-2
<node> iso-2022-jp-2
<p>
A <dref>MIME charset</dref>, which is a multilingual extension of
<dref>iso-2022-jp</dref>.
<p>
It is defined in RFC 1554.

<rfc name="iso-2022-jp-2" number="1554" type="Informational"
	      author="Ohta M. and Handa K." title="ISO-2022-JP-2:
	      Multilingual Extension of ISO-2022-JP" date="December
	      1993">


<h3> iso-2022-kr
<node> iso-2022-kr
<p>
A <a node="MIME charset">MIME charset</a> for Korean language (Hangul
script).
<p>
It is based on <dref>ISO 2022</dref> <dref>code extension</dref>
technique to extend <dref>ASCII</dref> to use <dref>KS C5601</dref> as
<dref>7bit</dref> text.
<p>
It is defined in <dref>RFC 1557</dref>.


<h3> ISO 646
<node> ISO 646
<p>
<standard abbrev="ISO 646" org="International Organization for
	      Standardization (ISO)" title-en="Information technology:
	      ISO 7-bit coded character set for information
	      interchange" number="ISO/IEC 646" year="1991">


<h3> ISO 8859-1
<node> ISO 8859-1
<p>
<standard abbrev="ISO 8859-1" org="International Organization for
	      Standardization (ISO)" title-en="Information Processing
	      -- 8-bit Single-Byte Coded Graphic Character Sets --
	      Part 1: Latin Alphabet No.1" number="ISO 8859-1"
	      year="1987">


<h3> iso-8859-1
<node> iso-8859-1
<p>
<concept>iso-8859-1</concept> is a <dref>MIME charset</dref> for
west-European languages written by Latin script.
<p>
It is a <dref>8bit</dref> <dref>coded character set</dref> based on
<dref>ISO 2022</dref>.  It extends <dref>ASCII</dref> to combine
<dref>ISO 8859-1</dref>.
<p>
It is defined in <dref>RFC 2046</dref>.


<h3> ISO 8859-2
<node> ISO 8859-2
<p>
<standard abbrev="ISO 8859-2" org="International Organization for
	      Standardization (ISO)" title-en="Information Processing
	      -- 8-bit Single-Byte Coded Graphic Character Sets --
	      Part 2: Latin alphabet No.2" number="ISO 8859-2"
	      year="1987">


<h3> iso-8859-2
<node> iso-8859-2
<p>
<concept>iso-8859-2</concept> is a <dref>MIME charset</dref> for
east-European languages written by Latin script.
<p>
It is a <dref>8bit</dref> <dref>coded character set</dref> based on
<dref>ISO 2022</dref>.  It extends <dref>ASCII</dref> to combine
<dref>ISO 8859-2</dref>.
<p>
It is defined in <dref>RFC 2046</dref>.


<h3> ISO 8859-3
<node> ISO 8859-3
<p>
<standard abbrev="ISO 8859-3" org="International Organization for
		Standardization (ISO)" title-en="Information
		Processing -- 8-bit Single-Byte Coded Graphic
		Character Sets -- Part 3: Latin alphabet No.3"
		number="ISO 8859-3" year="1988">


<h3> ISO 8859-4
<node> ISO 8859-4
<p>
<standard abbrev="ISO 8859-4" org="International Organization for
		Standardization (ISO)" title-en="Information
		Processing -- 8-bit Single-Byte Coded Graphic
		Character Sets -- Part 4: Latin alphabet No.4"
		number="ISO 8859-4" year="1988">


<h3> ISO 8859-5
<node> ISO 8859-5
<p>
<standard abbrev="ISO 8859-5" org="International Organization for
	      Standardization (ISO)" title-en="Information Processing
	      -- 8-bit Single-Byte Coded Graphic Character Sets --
	      Part 5: Latin/Cyrillic alphabet" number="ISO 8859-5"
	      year="1988">


<h3> iso-8859-5
<node> iso-8859-5
<p>
<concept>iso-8859-5</concept> is a <dref>MIME charset</dref> for
Cyrillic script.
<p>
It is a <dref>8bit</dref> <dref>coded character set</dref> based on
<dref>ISO 2022</dref>.  It extends <dref>ASCII</dref> to combine
<dref>ISO 8859-5</dref>.
<p>
It is defined in <dref>RFC 2046</dref>.


<h3> ISO 8859-6
<node> ISO 8859-6
<p>
<standard abbrev="ISO 8859-6" org="International Organization for
		Standardization (ISO)" title-en="Information
		Processing -- 8-bit Single-Byte Coded Graphic
		Character Sets -- Part 6: Latin/Arabic alphabet"
		number="ISO 8859-6" year="1987">


<h3> ISO 8859-7
<node> ISO 8859-7
<p>
<standard abbrev="ISO 8859-7" org="International Organization for
	      Standardization (ISO)" title-en="Information Processing
	      -- 8-bit Single-Byte Coded Graphic Character Sets --
	      Part 7: Latin/Greek alphabet" number="ISO 8859-7"
	      year="1987">


<h3> iso-8859-7
<node> iso-8859-7
<p>
<concept>iso-8859-7</concept> is a <dref>MIME charset</dref> for
Greek script.
<p>
It is a <dref>8bit</dref> <dref>coded character set</dref> based on
<dref>ISO 2022</dref>.  It extends <dref>ASCII</dref> to combine
<dref>ISO 8859-7</dref>.
<p>
It is defined in RFC 1947.

<rfc name="iso-8859-7" number="1947" type="Informational"
	      author="D. Spinellis" title="Greek Character Encoding
	      for Electronic Mail Messages" date="May 1996">


<h3> ISO 8859-8
<node> ISO 8859-8
<p>
<standard abbrev="ISO 8859-8" org="International Organization for
		Standardization (ISO)" title-en="Information
		Processing -- 8-bit Single-Byte Coded Graphic
		Character Sets -- Part 8: Latin/Hebrew alphabet"
		number="ISO 8859-8" year="1988">


<h3> ISO 8859-9
<node> ISO 8859-9
<p>
<standard abbrev="ISO 8859-9" org="International Organization for
		Standardization (ISO)" title-en="Information
		Processing -- 8-bit Single-Byte Coded Graphic
		Character Sets -- Part 9: Latin alphabet No.5"
		number="ISO 8859-9" year="1990">


<h3> ISO-IR-165, CCITT Extended GB <node> ISO-IR-165
<p>
A <dref>94x94-character set</dref> for Chinese mainly written by
simplified Chinese mainly used in the Chinese mainland registered by
CCITT.
<p>
It consists of <dref>GB 2312</dref>, <dref>GB 8565.2</dref> and
additional 150 characters.
<p>
Final byte of <dref>ISO 2022</dref> is 04/05 (`E').


<h3> JIS X0201
<node> JIS X0201
<p>
It defines two <dref>94-character set</dref>, for Latin script (a
variant of <dref>ISO 646</dref>) and Katakana script, and 7bit and
8bit <dref>coded character set</dref>s.
<p>
It was renamed from <concept>JIS C6220-1976</concept>.

<standard abbrev="JIS X0201-1976" org="Japanese Standards Association"
	      title-en="Code for Information Interchange" number="JIS
	      X 0201-1976">

In addition, revised version will be published in 1997.

<standard abbrev="JIS X0201-1997?" org="Japanese Standards
	      Association" title-en="7-bit and 8-bit coded character
	      sets for information interchange" number="JIS X 0201"
	      year="1997?  draft">


<h3> JIS C6226-1978
<node> JIS C6226
<p>
A <dref>94x94-character set</dref> for Japanese.  It was renamed to
JIS X0208-1978.
<p>
<cf node="JIS X0208">


<h3> JIS X0208
<node> JIS X0208
<p>
A <dref>94x94-character set</dref> for Japanese.  Japanese standard.
It was published in 1978, and revised in 1983 and 1990.  In the
Internet message, 1983 edition is major.
<p>
JIS X0208 contains some symbols, numbers, primary Latin script,
Hiragana script, Katakana script, Greek script, Cyrillic script, box
drawing parts, Kanji (Ideographic characters used in Japanese).
Notice that some symbols and box drawing parts were added in 1983 and
some Kanjis were changed or swapped code points.  So 1978 edition and
1983 edition are regarded as different graphic character set.
<p>
1990 edition added some characters, so designation of 1990 edition
requires `identify revised registration' sequence, ESC 02/06 4/0 as
prefix of designation sequence.

<standard abbrev="JIS X0208-1978" org="Japanese Standards Association"
	      title-en="Code of the Japanese graphic character set for
	      information interchange" number="JIS C6226" year="1978">
<standard abbrev="JIS X0208-1983,1990" org="Japanese Standards
	      Association" title-en="Code of the Japanese graphic
	      character set for information interchange" number="JIS
	      X0208" year="1983,1990">

<p>
In addition, revised version will be published in 1997. (It does not
change graphic character set)

<standard abbrev="JIS X0208-1997?" org="Japanese Standards
	      Association" title-en="7-bit and 8-bit double byte coded
	      Kanji sets for information interchange" number="JIS X
	      0208" year="1997? draft">


<h3> JIS X0212-1990
<node> JIS X0212
<p>
A <dref>94x94-character set</dref> for Japanese as supplement to
<dref>JIS X0208</dref>.  It is a standard of Japan.
<p>
Final byte of <dref>ISO 2022</dref> is 04/04 (`D').


<h3> koi8-r
<node> koi8-r
<p>
A <dref>MIME charset</dref> for Cyrillic script for Russian or other
languages.
<p>
It is a 1 byte <dref>8bit</dref> <dref>coded character set</dref>, not
based on <dref>ISO 2022</dref>.  It is a de-fact standard.
<p>
It is defined in RFC 1489.
<p>
<rfc number="1489" author="A. Chernov" title="Registration of a
	      Cyrillic Character Set" date="July 1993">


<h3> KS C5601-1987
<node> KS C5601
<p>
A <dref>94x94-character set</dref> for Korean language (Hangul
script).  Korean Standard.  Final byte of <dref>ISO 2022</dref> is
04/03 (`C').

<standard abbrev="KS C5601" org="Korea Industrial Standards
	      Association" title-en="Code for Information Interchange
	      (Hangul and Hanja)" number="KS C 5601" year="1987">


<h3> media type
<node> media type
<p>
<concept>media type</concept> specifies the nature of the data in the
body of <dref>MIME</dref> <dref>entity</dref>.  It consists of
<concept>type</concept> and <concept>subtype</concept>.  It is defined
in <dref>RFC 2046</dref>.
<p>
Currently there are following types:

<ul>
<li><concept>text</concept>
</li>
<li><concept>image</concept>
</li>
<li><concept>audio</concept>
</li>
<li><concept>video</concept>
</li>
<li><concept>application</concept>
</li>
<li><a node="multipart"><concept>multipart</concept></a>
</li>
<li><concept>message</concept>
</ul>

<p>
And there are various subtypes, for example, application/octet-stream,
audio/basic, image/jpeg, <dref>multipart/mixed</dref>,
<dref>text/plain</dref>, video/mpeg...
<p>
You can refer registered media types at <a
href="ftp://ftp.isi.edu/in-notes/iana/assignments/media-types">MEDIA
TYPES</a>.
<p>
In addition, you can use private type or subtype using
<concept>x-token</concept>, which as the prefix `x-'.  However you can
not use them in public.
<p>
<cf node="Content-Type field">


<h3> message
<node> message
<p>
In this document, it means mail defined in <dref>RFC 822</dref> and
news message defined in <dref>RFC 1036</dref>.


<h3> message/rfc822
<node> message/rfc822
<p>
<concept>message/rfc822</concept> indicates that the body contains an
encapsulated message, with the syntax of an <dref>RFC 822</dref>
message.  It is the replacement of traditional <dref>RFC 934</dref>
encapsulation.  It is defined in <dref>RFC 2046</dref>.


<h3> method
<node> method
<p>
Application program of tm-view to process for specified <dref>media
type</dref> when user plays an entity.
<p>
There are two kinds of methods, <concept>internal method</concept> and
<concept>external method</concept>.  Internal method is written by
Emacs Lisp.  External method is written by C or script languages and
called by asynchronous process call.
<p>
<cf file="tm-view-en" node="method">


<h3> MIME
<node> MIME
<p>
MIME stands for <concept>Multipurpose Internet Mail
Extensions</concept>, it is an extension for <dref>RFC 822</dref>.
<p>
According to RFC 2045:
<p>
STD 11, RFC 822, defines a message representation protocol specifying
considerable detail about US-ASCII message headers, and leaves the
message content, or message body, as flat US-ASCII text.  This set of
documents, collectively called the Multipurpose Internet Mail
Extensions, or MIME, redefines the format of messages to allow for
<p>
<ol>
<li>textual message bodies in character sets other than US-ASCII,
</li>
<li>an extensible set of different formats for non-textual message
bodies,
</li>
<li>multi-part message bodies, and
</li>
<li>textual header information in character sets other than US-ASCII.
</ol>

<p>
It is defined in <dref>RFC 2045</dref>, <dref>RFC 2046</dref>, <a
node="encoded-word">RFC 2047</a>, <dref>RFC 2048</dref> and <dref>RFC
2049</dref>.


<h3> MIME charset
<node> MIME charset
<p>
<a node="coded character set">Coded character set</a> used in
<dref>Content-Type field</dref> or charset parameter of <a
node="encoded-word">encoded-word</a>.
<p>
It is defined in <dref>RFC 2045</dref>.
<p>
<dref>iso-2022-jp</dref> or <dref>euc-kr</dref> are kinds of it.  (In
this document, MIME charsets are written by small letters to
distinguish <dref>graphic character set</dref>.  For example, ISO
8859-1 is a graphic character set, and iso-8859-1 is a MIME charset)


<h3> MTA
<node> MTA
<p>
<concept>Message Transfer Agent</concept>.  It means mail transfer
programs (ex. sendmail) and news servers.
<p>
<cf node="MUA">


<h3> MUA
<node> MUA
<p>
<concept>Message User Agent</concept>.  It means mail readers and news
readers.
<p>
<cf node="MTA">


<h3> MULE
<node> MULE
<p>
Multilingual extension of GNU <dref>Emacs</dref> by HANDA Ken'ichi et
al.

<inproc abbrev="MULE" author="Nishikimi M., Handa K. and Tomura S."
	      title-en="Mule: MULtilingual Enhancement to GNU Emacs"
	      book-en="Proc. of INET'93" date="August, 1993">
<p>
Now, FSF and HANDA Ken'ichi et al. are working to merge MULE feature
into Emacs, there is <a
href="ftp://etlport.etl.go.jp/pub/mule/mule-19.33-delta.taz">alpha
version of mule merged emacs</a>.
<p>
In addition, there is XEmacs with mule feature.
<p>
So now, there are 3 kinds of mule variants.
<p>
In this document, <concept>mule</concept> means any mule variants,
<concept>MULE</concept> means original MULE (..2.3),
<concept>Emacs/mule</concept> means mule merged Emacs,
<concept>XEmacs/mule</concept> means XEmacs with mule feature.


<h3> Multipart
<node> multipart
<p>
<concept>multipart</concept> means <dref>media type</dref> to insert
multiple <a node="entity">entities</a> in a single body.  Or it also
indicates a message consists of multiple entities.
<p>
There are following subtypes registered in <dref>RFC 2046</dref>:

<ul>
<li><dref>multipart/mixed</dref>
<li><dref>multipart/alternative</dref>
<li><dref>multipart/digest</dref>
<li><dref>multipart/parallel</dref>
</ul>

<noindent>
and registered in <a node="Security multipart">RFC 1847</a>:

<ul>
<li><dref>multipart/signed</dref>
<li><dref>multipart/encrypted</dref>
</ul>


<h3> multipart/alternative
<node> multipart/alternative
<p>
<concept>multipart/digest</concept> is one of <dref>multipart</dref>
media types.  This type is syntactically identical to
<dref>multipart/mixed</dref>, but the semantics are different.  In
particular, each of the body parts is an ``alternative'' version of
the same information.
<p>
<cf node="RFC 2046">


<h3> multipart/digest
<node> multipart/digest
<p>
<concept>multipart/digest</concept> is one of <dref>multipart</dref>
media types.  This type is syntactically identical to
<dref>multipart/mixed</dref>, but the semantics are different.  In
particular, in a digest, the default Content-Type value for a body
part is changed from <dref>text/plain</dref> to
<dref>message/rfc822</dref>.
<p>
This is the replacement of traditional <dref>RFC 1153</dref> based
<dref>encapsulation</dref>.
<p>
<cf node="RFC 2046">


<h3> multipart/encrypted
<node> multipart/encrypted
<p>
It is a <dref>Security multipart</dref> defined in 
RFC 1847, used to represent encrypted message.
<p>
<cf node="PGP/MIME">


<h3> multipart/mixed
<node> multipart/mixed
<p>
Primary and default subtype of <dref>multipart</dref>, it is used when
the body parts are independent and need to be bundled in a particular
order.
<p>
<cf node="RFC 2046">


<h3> multipart/parallel
<node> multipart/parallel
<p>
<concept>multipart/parallel</concept> is a subtype of
<dref>multipart</dref>.  This type is syntactically identical to
<dref>multipart/mixed</dref>, but the semantics are different.  In
particular, in a parallel entity, the order of body parts is not
significant.
<p>
<cf node="RFC 2046">


<h3> multipart/signed
<node> multipart/signed
<p>
It is a <dref>Security multipart</dref> defined in 
RFC 1847, used to represent signed message.
<p>
<cf node="PGP/MIME">


<h3> PGP
<node> PGP
<p>
A public key encryption program by Phil Zimmermann.  It provides
encryption and signature for <dref>message</dref>.  PGP stands for
<concept>Pretty Good Privacy</concept>.
<p>
Traditional PGP uses <dref>RFC 934</dref> <dref>encapsulation</dref>.
It is conflict with <dref>MIME</dref>.  So <dref>PGP/MIME</dref> is
defined.  On the other hand, <dref>PGP-kazu</dref> was proposed to use
PGP encapsulation in MIME.  But it is obsoleted.
<p>
<rfc name="PGP" number="1991" type="Informational" author="D. Atkins,
	      W. Stallings and P. Zimmermann" title="PGP Message
	      Exchange Formats" date="August 1996">



<h3> PGP-kazu
<node> PGP-kazu
<p>
In this document, <concept>PGP-kazu</concept> means a method to use
traditional PGP encapsulation in <dref>MIME</dref>, proposed by
YAMAMOTO Kazuhiko.
<p>
PGP-kazu defines a <dref>media type</dref>,
<concept>application/pgp</concept>.
<p>
In application/pgp entity, PGP <dref>encapsulation</dref> is used.
PGP encapsulation conflicts with MIME, so it requires PGP-processing
to read as MIME message.
<p>
It was obsoleted, so you should use <dref>PGP/MIME</dref>.  However if
you want to use traditional PGP message, it might be available.


<h3> PGP/MIME
<node> PGP/MIME
<p>
<dref>PGP</dref> and <dref>MIME</dref> integration proposed by Michael
Elkins.
<p>
It is based on <a node="Security multipart">RFC 1847</a>, so it is
harmonious with MIME, but it is not compatible with traditional PGP
encapsulation.  However MIME MUA can read PGP/MIME signed message even
if it does not support PGP/MIME.
<p>
<dref>PGP/MIME</dref> will be standard of PGP message.

<rfc name="PGP/MIME" number="2015" type="Standards Track"
	      author="M. Elkins" title="MIME Security with Pretty Good
	      Privacy (PGP)" date="October 1996">


<h3> Quoted-Printable
<node> Quoted-Printable
<p>
<concept>Quoted-Printable</concept> is a transfer encoding method of
<dref>MIME</dref> defined in <dref>RFC 2045</dref>.
<p>
If the data being encoded are mostly US-ASCII text, the encoded form
of the data remains largely recognizable by humans.
<p>
<cf node="Base64">


<h3> RFC 821
<node> RFC 821
<p>
<rfc name="SMTP" number="821" type="STD 10" author="J. Postel"
	      title="Simple Mail Transfer Protocol" date="August
	      1982">


<h3> RFC 822
<node> RFC 822
<p>
A RFC defines format of Internet mail message, mainly <concept>message
header</concept>.

<memo>
<p>
news message is based on RFC 822, so <concept>Internet
message</concept> may be more suitable than <concept>Internet
mail</concept> .
</memo>

<rfc number="822" type="STD 11" author="D. Crocker" title="Standard
	      for the Format of ARPA Internet Text Messages"
	      date="August 1982">


<h3> RFC 934
<node> RFC 934
<p>
A RFC defines an <a node="encapsulation">
<concept>encapsulation</concept></a> method for <a node="RFC
822">Internet mail</a>.
<p>
It conflicts with <dref>MIME</dref>, so you should use
<dref>message/rfc822</dref>.

<rfc number="934" author="Marshall T. Rose and Einar A. Stefferud"
	      title="Proposed Standard for Message Encapsulation"
	      date="January 1985">


<h3> RFC 1036
<node> RFC 1036
<p>
A RFC defines format of USENET message.  It is a subset of <dref>RFC
822</dref>.  It is not Internet standard, but a lot of netnews
excepting Usenet uses it.

<rfc name="USENET" number="1036" author="M. Horton and R. Adams"
	      title="Standard for Interchange of USENET Messages"
	      date="December 1987" obsolete="850">


<h3> RFC 1153
<node> RFC 1153
<p>
<rfc number="1153" author="F. Wancho" title="Digest Message Format"
	      date="April 1990">


<h3> RFC 1557
<node> RFC 1557
<p>
A RFC defines <dref>MIME charset</dref>s for Korean,
<dref>euc-kr</dref> and <dref>iso-2022-kr</dref>.

<rfc number="1557" type="Informational" author="U. Choi, K. Chon and
	      H. Park" title="Korean Character Encoding for Internet
	      Messages" date="December 1993">


<h3> RFC 1922
<node> RFC 1922
<p>
A RFC defines <dref>MIME charset</dref>s for Chinese,
<dref>iso-2022-cn</dref>, <dref>iso-2022-cn-ext</dref>,
<dref>cn-gb</dref>, <dref>cn-big5</dref>, etc.
<p>
In addition, it defines additional parameters of <dref>Content-Type
field</dref> field, <concept>charset-edition</concept> and
<concept>charset-extension</concept>.

<rfc number="1922" type="Informational" author="Zhu, HF., Hu, DY.,
	      Wang, ZG., Kao, TC., Chang, WCH. and Crispin, M."
	      title="Chinese Character Encoding for Internet Messages"
	      date="March 1996">


<h3> RFC 2045
<node> RFC 2045
<p>
<rfc number="2045" type="Standards Track" author="N. Freed and
	      N. Borenstein" title="Multipurpose Internet Mail
	      Extensions (MIME) Part One: Format of Internet Message
	      Bodies" date="November 1996" obsolete="1521, 1522,
	      1590">


<h3> RFC 2046
<node> RFC 2046
<p>
<rfc number="2046" type="Standards Track" author="N. Freed and
	      N. Borenstein" title="Multipurpose Internet Mail
                 Extensions (MIME) Part Two: Media Types"
                 date="November 1996" obsolete="1521, 1522, 1590">


<h3> RFC 2048
<node> RFC 2048
<p>
<rfc number="2048" type="Standards Track" author="N. Freed, J. Klensin
	      and J. Postel" title="Multipurpose Internet Mail
	      Extensions (MIME) Part Four: Registration Procedures"
	      date="November 1996" obsolete="1521, 1522, 1590">


<h3> RFC 2049
<node> RFC 2049
<p>
<rfc number="2049" type="Standards Track" author="N. Freed and
	      N. Borenstein" title="Multipurpose Internet Mail
	      Extensions (MIME) Part Five: Conformance Criteria and
	      Examples" date="November 1996" obsolete="1521, 1522,
	      1590">


<h3> plain text
<node> plain text
<p>
A textual data represented by only <dref>coded character set</dref>.
It does not have information about font or typesetting.
<cf node="text/plain">


<h3> Security multipart
<node> Security multipart
<p>
A format to represent signed/encrypted message in <dref>MIME</dref>.
<p>
It defines two multipart media types, <a
node="multipart/signed"><concept>multipart/signed</concept></a> and <a
node="multipart/encrypted"><concept>multipart/encrypted</concept></a>.
<p>
MOSS and <dref>PGP/MIME</dref> are based on it.

<rfc name="Security multipart" number="1847" type="Standards Track"
	      author="James Galvin, Gale Murphy, Steve Crocker and Ned
	      Freed" title="Security Multiparts for MIME:
	      Multipart/Signed and Multipart/Encrypted" date="October
	      1995">


<h3> text/enriched
<node> text/enriched
<p>
<rfc name="text/enriched" number="1896" author="P. Resnick and
	      A. Walker" title="The text/enriched MIME Content-type"
	      date="February 1996" obsolete="1563">


<h3> text/plain
<node> text/plain
<p>
<concept>text/plain</concept> is a <dref>media type</dref> for
<dref>plain text</dref>, defined in <dref>RFC 2046</dref>.
<p>
The default media type of ``text/plain; charset=us-ascii'' for
Internet mail describes existing Internet practice.  That is, it is
the type of body defined by <dref>RFC 822</dref>.
<p>
<cf node="MIME charset"><cf node="us-ascii">


<h3> tm-kernel, tm
<node> tm-kernel
<p>
A libraries to provide user interface about <dref>MIME</dref> for
emacs.  tm stands for `tools for MIME'.

<memo title="Unimportant notice(^-^;">
<p>
<ul>
  <li> tm may not stand for ``tiny-mime''(^-^;
  <li> tm may not stand for initial of an author (^-^;
  <li> ``Tools for MIME'' may be strained (^-^;
</ul>
</memo>


<h3> tm-MUA
<node> tm-MUA
<p>
<dref>MUA</dref> or MUA extender using <a node="tm-kernel">tm</a>.
<p>
<concept>tm oomori package</concept> has following extenders:

<ul>
<li><a file="tm-mh-e-en"><concept>tm-mh-e</concept></a>
 for <a file="mh-e">mh-e</a>
<li><a file="tm-gnus_en"><concept>tm-gnus</concept></a> for GNUS
<li><a file="gnus-mime-en"><concept>gnus-mime</concept></a> for Gnus
<li><a file="tm-vm-en"><concept>tm-vm</concept></a> for VM
<li><concept>tm-rmail</concept> for RMAIL
</ul>


<h3> us-ascii
<node> us-ascii
<p>
A <a node="MIME charset">MIME charset</a> for primary Latin script
mainly written by English or other languages.
<p>
It is a 7bit <dref>coded character set</dref> based on <dref>ISO
2022</dref>, it contains only
<dref>ASCII</dref> and <dref>code extension</dref> is not allowed.
<p>
It is standard coded character set of Internet mail.  If MIME charset
is not specified, <concept>us-ascii</concept> is used as default.
<p>
In addition, <concept>ASCII</concept> of <dref>RFC 822</dref> should
be interpreted as us-ascii.


<h1> Setting
<node> Setting
<p>
In the tm package, two files, <file>mime-setup.el</file> and
<file>tm-setup.el</file>, are provided to ease the setup.
<p>
The <file>mime-setup.el</file> is used for the whole MIME related
setup including MIME encoding using <file>tm-edit.el</file>, while
<file>tm-setup.el</file> is used to set up tm-MUA only.


<h2> Normal setting
<node> mime-setup
<p>
If you want normal setting, please use <concept>mime-setup</concept>.
For example, please insert following into <file>~/.emacs</file>:

<lisp>
(load "mime-setup")
</lisp>

<p>
As <file>mime-setup.el</file> loads <file>tm-setup.el</file>, you
don't need to load <file>tm-setup.el</file> when you use
<file>mime-setup.el</file> (Description of old version of Gnus FAQ is
wrong!)


<h3> signature
<node> signature
<p>
You can set up the <concept>automatic signature selection
tool</concept> using <file>mime-setup</file>. If you want to
automatically select the signature file depending on how the message
headers show, add lines like shown below to your .emacs (Refer to the
reference manual of <file>signature.el</file> for more details).

<lisp>
(setq signature-file-alist
      '((("Newsgroups" . "jokes")       . "~/.signature-jokes")
        (("Newsgroups" . ("zxr" "nzr")) . "~/.signature-sun")
        (("To" . ("ishimaru" "z-suzuki")) . "~/.signature-sun")
        (("To" . "tea")                 . "~/.signature-jokes")
        (("To" . ("sim" "oku" "takuo")) . "~/.signature-formal")
        ))
</lisp>


<defvar name="mime-setup-use-signature">
<p>
If it is not <code>nil</code>, <file>mime-setup.el</file> sets up for
<file>signature.el</file>.  Its default value is <code>t</code>.
</defvar>


<defvar name="mime-setup-signature-key-alist">
<p>
It defines key to bind signature inserting command for each
major-mode.  Its default value is following:

<lisp>
	((mail-mode . "\C-c\C-w"))
</lisp>

<p>
If you want to change, please rewrite it.  For example:

<lisp>
(set-alist 'mime-setup-signature-key-alist
	   'news-reply-mode "\C-c\C-w")
</lisp>

</defvar>


<defvar name="mime-setup-default-signature-key">
<p>
If key to bind signature inserting command for a major-mode is not
found from <code>mime-setup-signature-key-alist</code>, its value is
used as key.  Its default value is <code>"\C-c\C-s"</code>.
</defvar>


<h3> Notices for GNUS
<node> Notice about GNUS
<p>
When <file>mime-setup.el</file> sets up for <file>signature.el</file>,
it sets variable <code>gnus-signature-file</code> to <code>nil</code>.
Therefore GNUS does not insert signature automatically when it is
sending a message.  Reason of this setting is following:
<p>
GNUS inserts signature after <file>tm-edit.el</file> composed as MIME
message.  Therefore signature inserted by GNUS is not processed as a
valid MIME part.  In particular, for multipart message, signature
places in outside of MIME part.  So MIME MUA might not display it.
<p>
Other notice is key bind.  In historical reason, key bind to insert
signature is <kbd>C-c C-s</kbd> (like <a file="mh-e">mh-e</a>) instead
of <kbd>C-c C-w</kbd>. If you change to GNUS's default, please set
following:

<lisp>
(set-alist 'mime-setup-signature-key-alist 'news-reply-mode "\C-c\C-w")
</lisp>


<h2> Setting not to use tm-edit
<node> tm-setup
<p>
<concept>tm-setup</concept> only sets up <a node="tm-MUA">tm-MUA</a>s.
In other words, it is a setting to avoid to use tm-edit.  If you don't
want to compose MIME message or want to use other MIME composer,
please use it instead of <file>mime-setup.el</file>.
<p>
For example, please insert following into <file>~/.emacs</file>:

<lisp>
(load "tm-setup")
</lisp>

<p>

<memo>
<p>
If you use <file>mime-setup.el</file>, you you don't need to load
<file>tm-setup.el</file>.
</memo>


<h2> Setting for VM
<node> setting for VM
<p>
If you use <concept>vm</concept>, please insert following in
<file>~/.vm</file>:

<lisp>
(require 'tm-vm)
</lisp>


<memo title="Notice">
<p>
If you use <concept>BBDB</concept>, please insert <code>(require
'tm-vm)</code> <bf>after</bf> <code>(bbdb-insinuate-vm)</code>.
</memo>


<h2> Setting up without loading provided setup files
<node> manual setting
<p>
You may find the valuable hints in <file>mime-setup.el</file> or
<file>tm-setup.el</file> if you want to set up MIME environment
without loading the tm-provided setup files.

<memo>
<p>
Current tm provides some convenient features to expect tm-edit, and
they can not use if <file>mime-setup.el</file> is not used.  If you
want to set up original setting to use tm-edit, please declare
following setting:

<lisp>
(provide 'mime-setup)
</lisp>

</memo>


<h1> How to report bug and about mailing list of tm
<node> Bug report
<p>
If you write bug-reports and/or suggestions for improvement, please
send them to the tm Mailing List:

<ul>
<li> Japanese <mail>bug-tm-ja@chamonix.jaist.ac.jp</mail>
<li> English <mail>bug-tm-en@chamonix.jaist.ac.jp</mail>
</ul>

<p>
Notice that, we does not welcome bug reports about too old version.
Bugs in old version might be fixed.  So please try latest version at
first.
<p>
You should write <concept>good bug report</concept>.  If you write
only ``tm does not work'', we can not find such situations.  At least,
you should write name, type, variants and version of OS, emacs, tm and
MUA, and setting.  In addition, if error occurs, to send backtrace is
very important. <cf file="emacs" node="Bugs">
<p>
Bug may not appear only your environment, but also in a lot of
environment (otherwise it might not bug).  Therefor if you send mail
to author directly, we must write a lot of mails.  So please send mail
to address for tm bugs instead of author.
<p>
Via the tm ML, you can report tm bugs, obtain the latest release of
tm, and discuss future enhancements to tm.  To join the tm ML, send
e-mail to:

<ul>
<li> Japanese <mail>tm-ja-admin@chamonix.jaist.ac.jp</mail>
<li> English  <mail>tm-en-admin@chamonix.jaist.ac.jp</mail>
</ul>

<noindent>
Since the user registration is done manually, please write the mail
body in human-recognizable language (^_^).


<h1> Acknowledgments
<node> Acknowledgments
<p>
I thank MASUTANI Yasuhiro.  He requested me a lot of important
features and gave me a lot of suggestions when tm-view was born.
tm-view is based on his influence.
<p>
I thank ENAMI Tsugutomo for work of <file>mime.el</file>, which is an
origin of <file>tm-ew-d.el</file> and <file>mel-b.el</file>, and
permission to rewrite for tm.
<p>
I thank OKABE Yasuo for work of internal method for LaTeX and
automatic assembling method for message/partial.  I thank UENO
Hiroshi for work of internal method for tar archive.
<p>
I thank UMEDA Masanobu for his work of <file>mime.el</file>, which is
the origin of tm-edit, and permission to rewrite his work as tm-edit.
<p>
I thank KOBAYASHI Shuhei for his work as a tm maintainer.  In
addition, he often points out or suggests about conformity with RFCs.
<p>
I thank Oscar Figueiredo for his work as the maintainer of tm-vm.  He
improves tm-vm and wrote a good manual of tm-vm.
<p>
Last of all, I thank members of two tm mailing lists, Japanese and
English version.


<h1> Concept Index
<node> Concept Index

<cindex>


<h1> Variable Index
<node> Variable Index

<vindex>

</body>
