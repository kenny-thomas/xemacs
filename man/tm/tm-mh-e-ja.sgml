<!doctype sinfo system>
<!-- $Id: tm-mh-e-ja.sgml,v 1.1 1996/12/22 00:09:34 steve Exp $ -->
<head>
<title>tm-mh-e 7.71 説明書（日本語版）
<author>守岡 知彦 <mail>morioka@jaist.ac.jp</mail>
<date>1996/10/15

<toc>
</head>

<body>

<abstract>
<p>
This file documents tm-mh-e, a MIME extension for GNUS.
<p>
mh-e で MIME を楽しむための package である `tm-mh-e' について説明しま
す。
</abstract>


<h1> tm-mh-e って何？
<node> Introduction
<p>
<concept>tm-mh-e</concept> は <a file="tm-ja" node="tm-kernel">tm</a> 
を使って <a file="mh-e">mh-e</a> の <dref file="tm-ja">MIME</dref> 機
能を強化するための package です。
<p>
tm-mh-e によって強化される機能は次の通りです：

<ul>
<li><a file="tm-view-ja">tm-view</a> を使った automatic MIME preview
<li><a file="tm-edit-ja">tm-edit</a> を使った MIME message の作成
</ul>


<h1> MH-Folder mode に拡張される機能
<node> mh-folder-mode
<p>
<kl>
<kt>M-t
<kd>
automatic MIME preview を行なうかどうかの toggle
</kd>
<kt>v
<kd><code>mime/viewer-mode</code> に入り、MIME message を操作する
</kd>
<kt>.
<kd>
message を表示する
</kd>
<kt>,
<kd>
全ての field を表示した状態で、message を表示する
</kd>
<kt>M-,
<kd>
automatic MIME preview を行う前の生の message を表示する
</kl>

<p>
<dref file="tm-view-ja">mime/viewer-mode</dref> は MIME message を閲覧
するための mode で、message の中を移動したり、対話的に message の中の
各 content を再生したりすることができます。


<h1> MIME message の inline 表示
<node> Automatic MIME Preview
<p>
tm-mh-e では <concept>automatic MIME preview</concept> 機能を利用する
ことができます。この機能を使うと <a file="mh-e" node="Reading Mail">
MH-Folder mode</a> で記事を読む時、通常表示される show buffer の代わり
に <a file="tm-view-ja">tm-view</a> で処理された preview buffer を表示
します。
<p>
<p>
このため、<dref file="tm-ja">Quoted-Printable</dref> や <dref
file="tm-ja">Base64</dref> で encode された記事を decode して表示する
ことができます。あるいは、<dref file="tm-ja">text/enriched</dref> 形式
のような書体や組版に関する情報を持った記事を整形して表示できます。当然
のことながら、<dref file="tm-ja">multipart</dref> の記事も正しく処理で
きます。
<p>
また、<concept>XEmacs</concept> では text と同様に絵も preview buffer 
内で表示することができます。
<p>
metamail を使った場合と異なり、音の入った記事を読んだとたん、いきなり、
音が鳴り出したり、video の入った記事を読むたびに video が再生されたり、
anonymous <dref file="tm-ja">ftp</dref> や mail-server を利用した 
external-message の入った記事を読むたびに anonymous ftp を実行したり、
mail を送ったりすることが防げます。こうした content は preview buffer 
の中に入って再生 command を実行した時のみ再生されます。
<p>
しかしながら、遅い machine を使っていて、MIME 処理の overhead が気にな
る場合、automatic MIME preview を抑止することができます。


<defvar name="tm-mh-e/automatic-mime-preview">
<p>
<code>nil</code> でない場合、automatic MIME preview を行います。
</defvar>


<h1> 国際化
<node> mule
<p>
<a file="tm-ja" node="mule">MULE</a>, XEmacs/mule, および、mule 統合版 
Emacs (*1) などの mule 機能を持った emacs では <dref file="tm-ja">MIME
charset</dref> および、非 MIME message/part に対する newsgroup 毎に指
定された <code>default-mime-charset</code> での code 変換が行われます。

<memo>
(*1) 1996 年 10 月現在、半田 剣一 氏と RMS 氏が開発中の Emacs で、MULE
の機能のうち、多言語化と国際化に関する機能が merge されたものを指して
います。
</memo>

<p>
具体的には、code 変換は次のように行われます：

<ol>
<li>
もし、ある MIME message のある part が <dref file="tm-ja">Content-Type
field</dref> に charset parameter を持っていれば、その MIME charset を
用いて code 変換を行う。
<p>
<li>
message header や非 MIME message など、charset が宣言されていない場合、
Summary Buffer 上の <code>default-mime-charset</code> の値で code 変換
される。
</ol>


<h2> MTA で code 変換を行っている場合
<node> evil environment
<p>
<dref file="tm-ja">MTA</dref> で EUC や Shift_JIS などに code 変換して
いる場合、tm-mh-e の default の設定では文字化けします。はっきり言って、
こうしたことを行なうことはあまり勧められたことではないです。MIMEの 
charset 宣言がおかしくなるほかに、電子書名がおかしくなるなど、さまざま
な弊害があります。
<p>
よって、もし、あなたが管理者でこういう設定をしているのであれば即刻やめ
ましょう。また、どうしてもそういうことをしたいのなら user が MTA での 
code 変換をやめられるような方法にしましょう。また、あなたが管理者でな
いなら管理者を説得しましょう。また、業者がそういう設定をしないように注
文しましょう。聞くところによると、そういう設定をする見識のない WS
maker があるそうですが、SE にいってそういう設定をさせないようにしましょ
う。また、どうしても聞かないならそういう業者とは縁を切りましょう。
<p>
しかし、あなたが不幸にしてどうしてもこういう環境で使わざるを得ないので
あれば、以下の記述を参考にしてください。


<h3> 非 MIME message または charset が存在しない場合のみの対策
<p>
非 MIME message の場合、変数 default-mime-charset に文字 code を設定す
れば OK です。例えば、日本語 EUC の場合は

<lisp>
(setq default-mime-charset 'euc-japan)
</lisp>

<noindent>
として下さい。


<h3> MIME charset が存在する場合も含めた対策
<p>
<dref file="tm-ja">MIME charset</dref> が存在する場合、変数 
<code>mime-charset-coding-system-alist</code> に 
<code>iso-2022-jp</code> に対応する coding-system を 
<code>*sjis*</code> や <code>*euc-japan*</code> 等の変換された code に
変えるというのが１つの方法です。但し、この場合、encode されて元の文字 
code が保存されている場合に文字化けすることになります。
<p>
このことを考慮すると、関数 <code>tm-mh-e/decode-charset-buffer</code> 
を再定義するのが良いといえます。おそらく、iso-2022-jp 以外の文字 code 
は保存されないでしょうから、例えば日本語 EUC に変換されている場合、以
下のような定義で十分でしょう。

<lisp>
(defun tm-mh-e/decode-charset-buffer (charset &amp;optional encoding)
  (decode-mime-charset-region (point-min)(point-max) 'euc-japan)
  )
</lisp>


<h1> MIME message の作成
<node> MIME-Edit
<p>
<dref file="tm-ja">mime-setup</dref> を使っている場合、<a file="mh-e"
node="Draft Editing">MH-Letter mode</a> において、<a
file="tm-edit-ja">tm-edit</a> を用いた MIME message の作成を行うことが
できます。
<p>
また、MH-Folder mode で <kbd>f</kbd> を押すと、<dref file="tm-ja">RFC
934</dref> による forward の代りに <dref
file="tm-ja">message/rfc822</dref> 形式による forward が行えます。


<h1> 概念索引
<node> Concept Index

<cindex>


<h1> 変数索引
<node> Variable Index

<vindex>

</body>
