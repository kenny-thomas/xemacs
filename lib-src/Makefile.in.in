/*  Makefile for lib-src subdirectory in XEmacs.

Copyright (C) 1985, 1987, 1988, 1993, 1994 Free Software Foundation, Inc.

This file is part of XEmacs.

XEmacs is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2, or (at your option) any
later version.

XEmacs is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with XEmacs; see the file COPYING.  If not, write to the Free
the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

/* Note: FSF Makefile.in.in does something weird so that the comments
   above a certain point in this file are in shell format instead of
   in C format.  How the hell is this supposed to work? */

/* Avoid trouble on systems where the "SHELL" variable might be
   inherited from the environment. */
SHELL = /bin/sh

/* Some people use these in paths they define.
   This is a horrible kludge - should we really use CPP
   to pre-process Makefiles? */
#undef sparc
#undef sun
#undef unix
#undef sgi
#undef NeXT
#undef mips
#undef i386
#undef linux

/* ==================== Things "configure" will edit ==================== */

CC=@CC@
CPP=@CPP@
CFLAGS=@CFLAGS@
CPPFLAGS=@CPPFLAGS@
LDFLAGS=@LDFLAGS@
ALLOCA=@ALLOCA@
YACC=@YACC@
LN_S=@LN_S@
version=@version@
configuration=@configuration@

/* ==================== Where To Install Things ==================== */

/* The default location for installation.  Everything is placed in
   subdirectories of this directory.  The default values for many of
   the variables below are expressed in terms of this one, so you may
   not need to change them.  This is set with the --prefix option to
   "../configure". */
prefix=@prefix@

/* Like "prefix", but used for architecture-specific files.  This is
   set with the "--exec-prefix" option to "../configure". */
exec_prefix=@exec_prefix@

/* Where to install Emacs and other binaries that people will want to
   run directly (like etags).  This is set with the "--bindir" option
   to "../configure". */
bindir=@bindir@

/* Where to install and expect executable files to be run by Emacs
   rather than directly by users, and other architecture-dependent
   data.  ${archlibdir} is usually below this.  This is set with the
   --libdir option to "../configure". */
libdir=@libdir@

/* Where to find the source code.  This is set by the configure
   "--srcdir" option.  However, the value of ${srcdir} in
   this makefile is not identical to what was specified with --srcdir,
   since the variable here has "/lib-src" appended to the end. */
srcdir=@srcdir@

/* ==================== Emacs-specific directories ==================== */

/* These variables hold the values Emacs will actually use.  They are
   based on the values of the standard Make variables above.

   Where to put executables to be run by Emacs rather than the user.
   This path usually includes the Emacs version and configuration name,
   so that multiple configurations for multiple versions of Emacs may
   be installed at once.  This can be set with the --archlibdir option
   to "../configure". */
archlibdir=@archlibdir@

/* ==================== Utility Programs for the Build ================= */

/* ../configure figures out the correct values for these. */
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

/* ========================== Lists of Files =========================== */

/* Things that a user might actually run,
   which should be installed in bindir. */
INSTALLABLES = etags ctags b2m gnuclient
INSTALLABLE_SCRIPTS = rcs-checkin pstogif install-sid send-pr

/* Things that Emacs runs internally, or during the build process,
   which should not be installed in bindir. */
UTILITIES= make-path wakeup profile make-docfile digest-doc \
	sorted-doc movemail cvtmail fakemail yow hexl \
	gnuserv mmencode
/* These need to be conditional on I18N3
	make-msgfile make-po */

/* Like UTILITIES, but they are not system-dependent, and should not be
   deleted by the distclean target. */
TM_SCRIPTS=tm-au tm-file tm-html tm-image tm-mpeg tm-plain tm-ps tmdecode
SCRIPTS= rcs2log vcdiff gzip-el.sh install-sid send-pr $(TM_SCRIPTS)

EXECUTABLES= ${UTILITIES} ${INSTALLABLES} ${SCRIPTS} ${INSTALLABLE_SCRIPTS}

SOURCES = COPYING ChangeLog Makefile.in.in README aixcc.lex emacs.csh \
	makedoc.com *.[chy] $(SCRIPTS)
/*
# Additional -D flags for movemail (add to MOVE_FLAGS if desired):
# MAIL_USE_POP		Support mail retrieval from a POP mailbox.
# MAIL_USE_MMDF		Support MMDF mailboxes.
# MAIL_USE_FLOCK	Use flock for file locking (see the comments
#			about locking in movemail.c)
# MAIL_UNLINK_SPOOL	Unlink the user spool mailbox after reading
#			it (instead of just emptying it).
# KERBEROS		Support Kerberized POP.
# KRB5			Support Kerberos Version 5 pop instead of
#			Version 4 (define this in addition to
#			KERBEROS).
# HESIOD		Support Hesiod lookups of user mailboxes.
# MAILHOST		A string, the host name of the default POP
#			mail host for the site.
*/
MOVE_FLAGS=
/*
# Additional libraries for movemail:
# For KERBEROS
# MOVE_LIBS= -lkrb -ldes -lcom_err
# For KERBEROS + KRB5
# MOVE_LIBS= -lkrb5 -lcrypto -lisode -lcom_err
# Add "-lhesiod" if HESIOD is defined.
*/
MOVE_LIBS=

/* ========================== start of cpp stuff ======================= */

/* From here on, comments must be done in C syntax. (see comment above
   about this.) */

#define NO_SHORTNAMES
#define THIS_IS_YMAKEFILE
#define NOT_C_CODE
#include "../src/config.h"

/* With the traditional VPATH setting, it is not possible to
   simultaneously compile in-place and in another directory.  The
   mistaken definition is that *all* dependencies are searched for in
   the VPATH directory, rather than just the dependencies that are not
   themselves targets.  Thus, if there is an up-to-date .o file in the
   in-place location, it will not get recompiled in the not-in-place
   location.

   The GNU Make "vpath" directive continues this tradition, but at
   least lets you restrict the classes of files that it applies to.
   This allows us to kludge around the problem. */
#ifdef USE_GNU_MAKE
vpath %.c @srcdir@
vpath %.h @srcdir@
/* now list files that should NOT be searched in the srcdir.
   This includes any .c or .h built from something else
   (e.g. a .in file). */
/* none here */
#else
VPATH=@srcdir@
#endif

/* We will not really call alloca;
   do not let the file name alloca.c get messed up.  */
#ifdef alloca
#undef alloca
#endif

/* Some s/*.h files define this to request special libraries.  */
#ifndef LIBS_SYSTEM
#define LIBS_SYSTEM
#endif

/* Some m/*.h files define this to request special libraries.  */
#ifndef LIBS_MACHINE
#define LIBS_MACHINE
#endif

#ifndef LD_SWITCH_X_SYSTEM
#define LD_SWITCH_X_SYSTEM
#endif

#ifndef LD_SWITCH_X_SITE
#define LD_SWITCH_X_SITE
#endif

#ifndef C_SWITCH_SYSTEM
#define C_SWITCH_SYSTEM
#endif

#ifndef C_SWITCH_MACHINE
#define C_SWITCH_MACHINE
#endif

#ifndef C_SWITCH_X_SYSTEM
#define C_SWITCH_X_SYSTEM
#endif

#ifndef C_SWITCH_X_SITE
#define C_SWITCH_X_SITE
#endif

#ifndef C_SWITCH_SITE
#define C_SWITCH_SITE
#endif

#ifndef LD_SWITCH_SITE
#define LD_SWITCH_SITE
#endif

#undef MOVEMAIL_NEEDS_BLESSING
#ifndef MAIL_USE_FLOCK
#ifndef MAIL_USE_LOCKF
#define MOVEMAIL_NEEDS_BLESSING
#endif
#endif

#ifdef MOVEMAIL_NEEDS_BLESSING
#define BLESSMAIL blessmail
#else
#define BLESSMAIL
#endif

/* #if defined (HAVE_SOCKS) */
/* #define LIB_SOCKS -lsocks */
/* #else */
/* #define LIB_SOCKS */
/* #endif */

c_switch_general=@c_switch_general@
c_switch_window_system=@c_switch_window_system@
c_switch_all=@c_switch_all@
ld_switch_general=@ld_switch_general@
ld_switch_window_system=@ld_switch_window_system@
ld_switch_all=@ld_switch_all@
ld_libs_general=@ld_libs_general@
ld_libs_window_system=@ld_libs_window_system@
ld_libs_all=@ld_libs_all@

/* LOADLIBES=LIBS_SYSTEM LIBS_MACHINE LIB_SOCKS LD_SWITCH_SITE */
/* LOAD_X_LIBES=LD_SWITCH_X_SITE LD_SWITCH_X_SYSTEM */
/* C_SWITCH_X=C_SWITCH_X_SITE C_SWITCH_X_SYSTEM C_SWITCH_SITE */
LOADLIBES=$(ld_switch_general) $(ld_libs_general)
LOAD_X_LIBES=$(ld_switch_window_system)
C_SWITCH_X=$(c_switch_window_system)

/* We need to #define emacs to get the right versions of some files. */

lib_src_cppflags = -Demacs -I../src -I${srcdir} -I${srcdir}/../src $(CPPFLAGS)
cflags  = $(CFLAGS) $(lib_src_cppflags) $(c_switch_general)
ldflags = $(LDFLAGS) $(ld_switch_general) $(ld_libs_general)

/* CPP_CFLAGS =  $(c_switch_general) -Demacs -DHAVE_CONFIG_H \ */
/*    -I. -I../src -I${srcdir} -I${srcdir}/../src ${CPPFLAGS} ${CFLAGS} */
/* BASE_CFLAGS = -DHAVE_CONFIG_H \ */
/*     -I. -I../src -I${srcdir} -I${srcdir}/../src ${CPPFLAGS} ${CFLAGS} */
/* ALL_CFLAGS = $(BASE_CFLAGS) -Demacs */
/* LINK_CFLAGS = $(ALL_CFLAGS) -Demacs -DHAVE_CONFIG_H \ */
/*    -I. -I../src -I${srcdir} -I${srcdir}/../src ${LDFLAGS} ${CFLAGS} */
/*   Formerly -Demacs was missing, but it is needed to suppress the */
/*    defining of malloc to xmalloc.  [Yes it is fucked up.  Blame FSF */
/*    for this.] */
/* ALLOCA_CFLAGS = -Demacs -DHAVE_CONFIG_H \ */
/*    -I. -I../src -I${srcdir} -I${srcdir}/../src ${CPPFLAGS} ${CFLAGS} */

/* This is the default compilation command.
   But we should never rely on it, because some make version
   failed to find it for getopt.o.
   Using an explicit command made it work.  */
.c.o:
	${CC} -c $(cflags) $<

all: ${UTILITIES} ${INSTALLABLES} ${SCRIPTS}

/* Make symlinks for shell scripts if using --srcdir */
rcs2log:
	${LN_S} ${srcdir}/$@ $@
vcdiff: 
	${LN_S} ${srcdir}/$@ $@
tm-au :
	${LN_S} ${srcdir}/$@ $@
tm-file :
	${LN_S} ${srcdir}/$@ $@
tm-html :
	${LN_S} ${srcdir}/$@ $@
tm-image :
	${LN_S} ${srcdir}/$@ $@
tm-mpeg :
	${LN_S} ${srcdir}/$@ $@
tm-plain :
	${LN_S} ${srcdir}/$@ $@
tm-ps :
	${LN_S} ${srcdir}/$@ $@
tmdecode :
	${LN_S} ${srcdir}/$@ $@
gzip-el.sh:
	${LN_S} ${srcdir}/$@ $@
install-sid:
	${LN_S} ${srcdir}/$@ $@
send-pr:
	${LN_S} ${srcdir}/$@ $@

#ifdef MOVEMAIL_NEEDS_BLESSING
blessmail:
	../src/emacs -batch -l ../lisp/blessmail.el
	chmod +x blessmail
#endif

maybe-blessmail: BLESSMAIL
#ifdef MOVEMAIL_NEEDS_BLESSING
/* Do not charge ahead and do it!  Let the installer decide.
	  ./blessmail ${archlibdir}/movemail  */
	@if [ `wc -l <blessmail` != 2 ] ; then \
	  dir=`sed -n -e 's/echo mail directory = \(.*\)/\1/p' blessmail`; \
	  echo Assuming $$dir is really the mail spool directory, you should; \
	  echo run  lib-src/blessmail ${archlibdir}/movemail; \
	  echo as root, to give  movemail  appropriate permissions.; \
	  echo Do that after running  make install.; \
	fi
#endif

/* Install the internal utilities.  Until they are installed, we can
   just run them directly from lib-src.  */
${archlibdir}: all
	@echo
	@echo "Installing utilities run internally by XEmacs."
	./make-path ${archlibdir}
	if [ `(cd ${archlibdir} && /bin/pwd)` != `/bin/pwd` ]; then \
	  for file in ${UTILITIES}; do \
	    (cd .. && $(INSTALL_PROGRAM) lib-src/$$file ${archlibdir}/$$file) ; \
	  done ; \
	fi
	if [ `(cd ${archlibdir} && /bin/pwd)` \
	     != `(cd ${srcdir} && /bin/pwd)` ]; then \
	  for file in ${SCRIPTS}; do \
	    (cd .. && $(INSTALL_PROGRAM) ${srcdir}/$$file ${archlibdir}/$$file); \
	  done ; \
	fi

/* We do not need to install "wakeup" explicitly, because it will be
   copied when this whole directory is copied.  */
install: ${archlibdir}
	@echo
	@echo "Installing utilities for users to run."
	for file in ${INSTALLABLES} ; do \
	  (cd .. && $(INSTALL_PROGRAM) lib-src/$${file} ${bindir}/$${file}) ; \
	done
	for file in ${INSTALLABLE_SCRIPTS} ; do \
	  (cd .. && $(INSTALL_PROGRAM) ${srcdir}/$${file} ${bindir}/$${file}) ; \
	done

uninstall:
	(cd ${bindir} && \
	 rm -f ${INSTALLABLES} ${INSTALLABLE_SCRIPTS})
	(cd ${archlibdir} && \
	 rm -f ${UTILITIES} ${INSTALLABLES} ${SCRIPTS} ${INSTALLABLE_SCRIPTS})

mostlyclean:
	-rm -f core *.o

clean: mostlyclean
	-rm -f ${INSTALLABLES} ${UTILITIES}

distclean: clean
	-rm -f DOC *.tab.c *.tab.h aixcc.c TAGS
	-rm -f Makefile Makefile.in blessmail

realclean: distclean
	true

extraclean: realclean
	-rm -f *~ \#*

unlock:
	chmod u+w $(SOURCES)

relock:
	chmod u-w $(SOURCES)

/* Test the contents of the directory.  */
check:
	@echo "We don't have any tests for XEmacs yet."

TAGS: etags
	etags *.[ch]

GETOPTOBJS = getopt.o getopt1.o $(ALLOCA)
GETOPTDEPS = $(GETOPTOBJS) ${srcdir}/getopt.h
getopt.o: ${srcdir}/getopt.c ${srcdir}/getopt.h
	${CC} -c $(cflags) ${srcdir}/getopt.c
getopt1.o: ${srcdir}/getopt1.c ${srcdir}/getopt.h
	${CC} -c $(cflags) ${srcdir}/getopt1.c
alloca.o: ${srcdir}/../src/alloca.c
	${CC} -c ${ALLOCA_CFLAGS} ${srcdir}/../src/alloca.c

#ifdef REGEXP_IN_LIBC
REGEXOBJ =
REGEXDEPS =
#else
REGEXOBJ = regex.o
REGEXDEPS = $(REGEXOBJ) ${srcdir}/../src/regex.h
#endif

regex.o: ${srcdir}/../src/regex.c ${srcdir}/../src/regex.h
	$(CC) -c `echo ${cflags} | sed 's/-Demacs/ /'` \
		-DCONFIG_BROKETS -DINHIBIT_STRING_HEADER ${srcdir}/../src/regex.c

etags: ${srcdir}/etags.c $(GETOPTDEPS) $(REGEXDEPS) ../src/config.h
	$(CC) ${cflags} -DVERSION="\"${version}\"" -DETAGS_REGEXPS ${srcdir}/etags.c $(GETOPTOBJS) $(REGEXOBJ) $(ldflags) -o etags

/* We depend on etags to assure that parallel makes do not write two
   etags.o files on top of each other.  */
ctags: ${srcdir}/etags.c $(GETOPTDEPS) etags
	$(CC) ${cflags} -DCTAGS -DVERSION="\"${version}\"" ${srcdir}/etags.c $(GETOPTOBJS) $(ldflags) -o ctags

wakeup: ${srcdir}/wakeup.c
	$(CC) ${cflags} ${srcdir}/wakeup.c $(ldflags) -o wakeup

profile: ${srcdir}/profile.c
	$(CC) ${cflags} ${srcdir}/profile.c $(ldflags) -o profile

make-docfile: ${srcdir}/make-docfile.c
	$(CC) ${cflags} ${srcdir}/make-docfile.c $(ldflags) -o make-docfile

digest-doc: ${srcdir}/digest-doc.c
	$(CC) ${cflags} ${srcdir}/digest-doc.c $(ldflags) -o digest-doc 

sorted-doc: ${srcdir}/sorted-doc.c ${ALLOCA}
	$(CC) ${cflags} ${srcdir}/sorted-doc.c ${ALLOCA} $(ldflags) -o sorted-doc

b2m: ${srcdir}/b2m.c ../src/config.h
	$(CC) ${cflags} ${srcdir}/b2m.c $(ldflags) -o b2m 

movemail: ${srcdir}/movemail.c ${srcdir}/pop.c ${srcdir}/pop.h ../src/config.h
	$(CC) ${cflags} ${MOVE_FLAGS} ${srcdir}/movemail.c ${srcdir}/pop.c $(ldflags) ${MOVE_LIBS} -o movemail

cvtmail: ${srcdir}/cvtmail.c
	$(CC) ${cflags} ${srcdir}/cvtmail.c $(ldflags) -o cvtmail

fakemail: ${srcdir}/fakemail.c ../src/config.h
	$(CC) ${cflags} ${srcdir}/fakemail.c $(ldflags) -o fakemail

yow: ${srcdir}/yow.c ../src/paths.h
	$(CC) ${cflags} ${srcdir}/yow.c $(ldflags) -o yow

hexl: ${srcdir}/hexl.c
	$(CC) ${cflags} ${srcdir}/hexl.c $(ldflags) -o hexl

make-msgfile: ${srcdir}/make-msgfile.c
	$(CC) $(cflags) ${srcdir}/make-msgfile.c $(ldflags) -o make-msgfile

make-po: ${srcdir}/make-po.c
	$(CC) $(cflags) ${srcdir}/make-po.c $(ldflags) -o make-po

/* Why oh why does HP not include half of the standard X distribution? */

#ifdef HAVE_XAUTH
cflags_gnuserv = $(CFLAGS) $(lib_src_cppflags) $(c_switch_all)
ldflags_gnuserv = $(LDFLAGS) $(ld_switch_all) $(ld_libs_all)
#else
cflags_gnuserv = ${cflags}
ldflags_gnuserv = ${ldflags}
#endif
gnuslib.o: ${srcdir}/gnuslib.c ${srcdir}/gnuserv.h ../src/config.h
	$(CC) -c ${cflags_gnuserv} ${srcdir}/gnuslib.c
gnuclient: ${srcdir}/gnuclient.c gnuslib.o ${srcdir}/gnuserv.h 
	$(CC) ${cflags_gnuserv} -o gnuclient ${srcdir}/gnuclient.c gnuslib.o $(ldflags_gnuserv)
gnuserv: ${srcdir}/gnuserv.c gnuslib.o ${srcdir}/gnuserv.h
	$(CC) ${cflags_gnuserv} -o gnuserv ${srcdir}/gnuserv.c gnuslib.o $(ldflags_gnuserv)

/* mmencode binary is used by tm - but is really part of the metamail package */
/* mmencode.c was merged copy of mmencode.c and codes.c of metamail */
mmencode : ${srcdir}/mmencode.c
	$(CC) ${cflags} ${srcdir}/mmencode.c -o mmencode


/* The timer utility (timer.c, getdate.y) is not used in XEmacs
   because XEmacs provides built-in timer facilities. */

make-path: ${srcdir}/make-path.c ../src/config.h
	$(CC) $(cflags) ${srcdir}/make-path.c -o make-path

/* These are NOT included in INSTALLABLES or UTILITIES.
   See ../src/Makefile.in.in.  */
aixcc: ${srcdir}/aixcc.c
	$(CC) $(cflags) -o aixcc ${srcdir}/aixcc.c

aixcc.c: ${srcdir}/aixcc.lex
	lex ${srcdir}/aixcc.lex
	mv lex.yy.c aixcc.c
